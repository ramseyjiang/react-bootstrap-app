{"version":3,"sources":["components/common/utils/Storage.js","services/AuthReducer.js","contexts/AuthContext.js","components/common/layout/Navbar.jsx","components/common/layout/Header.jsx","components/common/utils/Date.js","components/common/layout/Footer.jsx","services/WeatherReducer.js","contexts/WeatherContext.js","components/weather/Weather.jsx","services/ExchangeReducer.js","contexts/ExchangeContext.js","components/exchange/CurrentExchangeRate.jsx","views/HomePage.jsx","components/auth/Login.jsx","components/Routes.js","components/common/layout/Layout.jsx","App.js","serviceWorker.js","index.js","components/common/utils/Request.js","components/common/form/InputText.jsx"],"names":["setLocal","key","value","localStorage","setItem","initAuth","isLoggedIn","loading","username","role","isAdmin","isManager","isStaff","isClient","error","authReducer","state","action","type","initAccess","loginSuccess","loginFailure","logout","getItem","removeItem","AuthContext","createContext","useAuthContext","useContext","AuthContextProvider","children","useReducer","dispatch","useEffect","login","useCallback","delay","ms","Promise","resolve","setTimeout","apiLogin","a","authApi","useMemo","Provider","Navigation","useState","expanded","setExpanded","layoutColor","Navbar","fixed","expand","bg","variant","Brand","href","Toggle","onClick","aria-controls","Collapse","id","Nav","className","exact","to","Header","year","Date","getFullYear","Footer","initState","data","errorMessage","weatherReducer","Error","WeatherContext","WeatherContextProvider","getWeather","get","then","res","location","city","country","result","weatherApi","Weather","Alert","weather","main","Math","round","temp","description","CURRENCIES","initialized","rates","base","tableKeys","AUD","CNY","NZD","SGD","barData","exchangeReducer","generateBarData","filteredRates","Object","keys","filter","includes","labels","datasets","backgroundColor","map","ExchangeContext","ExchangeContextProvider","getLatestExchangeRate","EXCHANGE_API_URL","exchangeApi","CurrentExchangeRate","Container","getDate","month","getMonth","Table","striped","bordered","hover","floor","Number","style","height","width","margin","options","maintainAspectRatio","legend","display","scales","yAxes","ticks","beginAtZero","title","text","HomePage","Login","password","setLogin","handleChange","e","target","name","Form","onSubmit","preventDefault","method","Row","InputText","placeholder","label","onChange","Button","size","NotFound","lazy","DogPage","MoviePage","TaskPage","Contact","Routes","AuthRoute","component","finalComponent","fallback","path","Layout","fluid","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","url","fetch","response","json","log","onBlur","multiple","Group","as","Col","Label","Control","required"],"mappings":"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","file":"static/js/main.28c5bb1e.chunk.js","sourcesContent":["export function getLocal(key) {\n  return localStorage.getItem(key);\n}\n\nexport function setLocal(key, value) {\n  return localStorage.setItem(key, value);\n}\n\nexport function removeLocal(key) {\n  localStorage.removeItem(key);\n}\n","import {\n  getLocal,\n  removeLocal,\n  setLocal\n} from \"../components/common/utils/Storage.js\";\n\nexport const initAuth = {\n  isLoggedIn: false,\n  loading: false,\n  username: null,\n  role: { isAdmin: false, isManager: false, isStaff: false, isClient: true }, //it is used to extension the roles management.\n  error: null\n};\n\n// Actions\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOADING = \"LOADING\";\nexport const INIT = \"INIT\";\n\nexport function authReducer(state, action) {\n  switch (action.type) {\n    case INIT:\n      return initAccess();\n    case LOADING:\n      return { ...state, loading: true };\n    case LOGIN_SUCCESS:\n      return loginSuccess(action);\n    case LOGIN_FAIL:\n      return loginFailure(action);\n    case LOGOUT:\n      return logout();\n    default:\n      return state;\n  }\n}\n\nconst initAccess = () => {\n  let username = getLocal(\"username\");\n  return { ...initAuth, isLoggedIn: username !== null, username: username };\n};\n\nconst loginSuccess = action => {\n  setLocal(\"username\", action.username);\n  return { ...initAuth, isLoggedIn: true, username: action.username };\n};\n\nconst loginFailure = action => {\n  setLocal(\"username\", null);\n  return { ...initAuth, error: action.error };\n};\n\nconst logout = () => {\n  removeLocal(\"username\");\n  return { ...initAuth };\n};\n","import React, {\n  createContext,\n  useCallback,\n  useMemo,\n  useContext,\n  useEffect,\n  useReducer\n} from \"react\";\n\nimport {\n  initAuth,\n  authReducer,\n  INIT,\n  LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from \"../services/AuthReducer\";\n\nconst AuthContext = createContext();\n\nconst AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initAuth);\n\n  //The first time a user visits the website, it will only run once.\n  //The other scenario, a user closed website without logout, after the user come back, it will auto login.\n  useEffect(() => {\n    if (state.username === null) {\n      dispatch({ type: INIT });\n    }\n  }, [state.username]);\n\n  const loading = () => dispatch({ type: LOADING });\n\n  const login = useCallback(username => {\n    if (username === \"ramsey\") {\n      return dispatch({ type: LOGIN_SUCCESS, username: username });\n    } else {\n      return dispatch({ type: LOGIN_FAIL, error: \"User not found!\" });\n    }\n  }, []);\n\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  // A fake authenticator to mock async api call\n  const apiLogin = useCallback(async username => {\n    await delay(2000);\n    if (username === \"ramsey\") {\n      return dispatch({ type: LOGIN_SUCCESS, username: username });\n    } else {\n      return dispatch({ type: LOGIN_FAIL, error: \"User not found!\" });\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    dispatch({ type: LOGOUT });\n  }, []);\n\n  const authApi = useMemo(() => ({ state, loading, logout, login, apiLogin }), [\n    logout,\n    login,\n    apiLogin,\n    state\n  ]);\n\n  return (\n    <AuthContext.Provider value={{ authApi }}>{children}</AuthContext.Provider>\n  );\n};\n\nexport const useAuthContext = () => {\n  return useContext(AuthContext);\n};\n\nexport default AuthContextProvider;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar,  Nav } from \"react-bootstrap\";\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\n\nconst Navigation = () => {\n  const { authApi } = useAuthContext();\n\n  //collapseOnSelect is not stable, it works for href, but not works for router to. That's why I build it by myself.\n  const [expanded, setExpanded] = useState(false);\n  const layoutColor = authApi.state.isLoggedIn ? \"primary\" : \"dark\";  //It is a cue for change different layout\n  \n  return (\n    <Navbar expanded={expanded} fixed='top' expand=\"sm\" bg={layoutColor} variant=\"dark\">\n      <Navbar.Brand href=\"/react-bootstrap-app\">HooksHut</Navbar.Brand>\n      <Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")} aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className=\"mr-auto\">\n          <NavLink\n            exact\n            className='nav-link'\n            to='/react-bootstrap-app'\n            onClick={() => setExpanded(false)}>\n            Home\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/dogs'\n            onClick={() => setExpanded(false)}>\n            Dogs\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/movies'\n            onClick={() => setExpanded(false)}>\n            Movies\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/tasks'\n            onClick={() => setExpanded(false)}>\n            Tasks\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/contact'\n            onClick={() => setExpanded(false)}>\n            Contact\n          </NavLink>\n        </Nav>\n        { !authApi.state.isLoggedIn && <Nav>\n          <NavLink exact to=\"/login\" className='nav-link'>Login</NavLink>\n          <NavLink exact to=\"/register\" className='nav-link'>Register</NavLink>\n        </Nav> }\n        { authApi.state.isLoggedIn && <Nav>\n          <NavLink to=\"/react-bootstrap-app\" onClick={() => authApi.logout()} className='nav-link'>Logout</NavLink>\n        </Nav> }\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nconst Header = () => {\n  return (\n    <>\n      <Navbar />\n    </>\n  );\n};\n\nexport default Header;","export function year() {\n  return new Date().getFullYear();\n}\n\nexport function month() {\n  let month = new Date().getMonth() + 1;\n  if (month >= 10) {\n    return month;\n  } else {\n    return \"0\" + month;\n  }\n}\n\nexport function day() {\n  return new Date().getDate();\n}\n","import React from \"react\";\nimport {year} from \"../utils/Date.js\"\n\nconst Footer = () => {\n    return (\n      <div className=\"font-small bg-dark\">\n        <div className=\"text-center text-white py-1\">© {year()} Copyright:Ramsey Jiang</div>\n      </div>\n    );\n};\n\nexport default Footer;","// Actions\nexport const LOADING = \"LOADING\";\nexport const GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\";\nexport const GET_WEATHER_FAILURE = \"GET_WEATHER_FAILURE\";\n\nexport const initState = {\n  data: null,\n  loading: false,\n  errorMessage: null\n};\n\nexport const weatherReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case GET_WEATHER_SUCCESS: {\n      return {\n        ...initState,\n        data: action.data\n      };\n    }\n    case GET_WEATHER_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: \"Something wrong!\"\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer\n} from \"react\";\nimport {\n  initState,\n  weatherReducer,\n  GET_WEATHER_SUCCESS,\n  GET_WEATHER_FAILURE\n} from \"../services/WeatherReducer\";\nimport { get } from \"../components/common/utils/Request\";\n\nconst WeatherContext = createContext();\n\nconst WeatherContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(weatherReducer, initState);\n\n  const IP_API_URL = \"https://ipapi.co/json/\";\n  const WEATHER_API_URL =\n    \"https://api.openweathermap.org/data/2.5/weather?APPID=3a58f9dd1f1515ec0dba25894ccea202&q=\";\n\n  const getWeather = useCallback(() => {\n    get(IP_API_URL).then(res => {\n      let location = res.city + \",\" + res.country;\n      get(WEATHER_API_URL + location).then(result => {\n        try {\n          dispatch({ type: GET_WEATHER_SUCCESS, data: result });\n        } catch {\n          dispatch({ type: GET_WEATHER_FAILURE, data: result });\n        }\n      });\n    });\n  }, [IP_API_URL]);\n\n  const weatherApi = useMemo(() => ({ state, getWeather }), [\n    state,\n    getWeather\n  ]);\n\n  return (\n    <WeatherContext.Provider value={{ weatherApi }}>\n      {children}\n    </WeatherContext.Provider>\n  );\n};\n\nexport const useWeatherContext = () => {\n  return useContext(WeatherContext);\n};\n\nexport default WeatherContextProvider;\n","import React, {useEffect} from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { useWeatherContext } from \"../../contexts/WeatherContext\";\n\nconst Weather = () => {\n  const { weatherApi } = useWeatherContext();\n  useEffect(() => {\n    weatherApi.getWeather(); \n  }, []);\n\n  return (\n    <>\n      {weatherApi.state.data && <Alert className=\"justify-content-center weather-bar\" variant='info'>\n        Welcome, current weather is {weatherApi.state.data.weather[0].main}, temperature is {Math.round(((weatherApi.state.data.main.temp * 9/5 - 459.67) - 32)*5/9)}°C, conditions: {weatherApi.state.data.weather[0].description}\n      </Alert>}\n    </>\n  );\n}\n\nexport default Weather;","export const LOADING = \"LOADING\";\nexport const GET_LATEST_SUCCESS = \"GET_LATEST_SUCCESS\";\nexport const GET_LATEST_FAILURE = \"GET_LATEST_FAILURE\";\n\nconst CURRENCIES = [\"AUD\", \"CNY\", \"NZD\", \"SGD\"];\n\nexport const initState = {\n  data: {\n    initialized: false,\n    rates: {},\n    base: \"USD\",\n    tableKeys: {\n      AUD: \"AUD\",\n      CNY: \"CNY\",\n      NZD: \"NZD\",\n      SGD: \"SGD\"\n    },\n    barData: {}\n  },\n  loading: false,\n  errorMessage: null\n};\n\nexport const exchangeReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case GET_LATEST_SUCCESS: {\n      return {\n        ...initState,\n        data: {\n          initialized: true,\n          rates: action.data.rates,\n          base: action.data.base,\n          barData: generateBarData(action.data.rates),\n          tableKeys: initState.data.tableKeys\n        }\n      };\n    }\n    case GET_LATEST_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: \"Something wrong!\"\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n\nconst generateBarData = rates => {\n  let filteredRates = Object.keys(rates).filter(key =>\n    CURRENCIES.includes(key)\n  );\n\n  return {\n    labels: filteredRates,\n    datasets: [\n      {\n        backgroundColor: \"green\",\n        data: filteredRates.map(key => rates[key])\n      }\n    ]\n  };\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer\n} from \"react\";\nimport {\n  initState,\n  exchangeReducer,\n  GET_LATEST_SUCCESS,\n  GET_LATEST_FAILURE\n} from \"../services/ExchangeReducer\";\n\nimport { get } from \"../components/common/utils/Request\";\n\nconst ExchangeContext = createContext();\n\nconst ExchangeContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(exchangeReducer, initState);\n  const EXCHANGE_API_URL = \"https://api.exchangeratesapi.io/\";\n\n  const getLatestExchangeRate = useCallback(() => {\n    get(EXCHANGE_API_URL + \"latest?base=USD\").then(result => {\n      try {\n        dispatch({ type: GET_LATEST_SUCCESS, data: result });\n      } catch {\n        dispatch({ type: GET_LATEST_FAILURE, data: result });\n      }\n    });\n  }, []);\n\n  const exchangeApi = useMemo(() => ({ state, getLatestExchangeRate }), [\n    state,\n    getLatestExchangeRate\n  ]);\n\n  return (\n    <ExchangeContext.Provider value={{ exchangeApi }}>\n      {children}\n    </ExchangeContext.Provider>\n  );\n};\n\nexport const useExchangeContext = () => {\n  return useContext(ExchangeContext);\n};\n\nexport default ExchangeContextProvider;\n","import React, {useEffect} from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useExchangeContext } from \"../../contexts/ExchangeContext\";\nimport {year, month, day} from \"../common/utils/Date.js\"\n\nconst CurrentExchangeRate = () => {\n  const { exchangeApi } = useExchangeContext();\n\n  useEffect(() => {\n    exchangeApi.getLatestExchangeRate();\n  }, []);\n\n  const options = {\n    maintainAspectRatio: false,\n    legend: { display: false },\n    scales: {\n      yAxes: [{ ticks: { beginAtZero: true } }],\n    },\n    title: {\n      display: true,\n      text: \"USD Exchanges Rates\",\n    },\n  };\n  \n  return (\n    <Container className=\"exchange-rate-bg rounded\">\n      <h3 className=\"text-center\">Exchange rates on {day()}-{month()}-{year()}</h3>\n\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            {Object.keys(exchangeApi.state.data.tableKeys).map(key => (\n              <th key={key}>{key}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>USD</td>\n            {exchangeApi.state.data.initialized && Object.keys(exchangeApi.state.data.tableKeys).map(key => (\n              <td key={key}>{Math.floor(Number(exchangeApi.state.data.rates[key]) * 100) / 100}</td>\n            ))}\n          </tr>\n        </tbody>\n      </Table>\n\n      <div style={{ height: \"200px\", width:\"auto\", margin: \"0 auto\" }}>\n        <Bar data={exchangeApi.state.data.barData} options={options} />\n      </div>\n    </Container>\n  );\n};\n\nexport default CurrentExchangeRate;","import React from \"react\";\nimport Weather from '../components/weather/Weather';\nimport WeatherContextProvider from \"../contexts/WeatherContext\";\nimport ExchangeContextProvider from \"../contexts/ExchangeContext\";\nimport CurrentExchangeRate from '../components/exchange/CurrentExchangeRate';\n\nconst HomePage = () => {\n  return (\n    <>\n      <WeatherContextProvider>\n        <Weather />\n      </WeatherContextProvider>\n      <ExchangeContextProvider>\n        <CurrentExchangeRate />\n      </ExchangeContextProvider>\n    </>\n  );\n};\n\nexport default HomePage;","import React, { useState } from \"react\";\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport InputText from '../common/form/InputText';\nimport { useAuthContext } from \"../../contexts/AuthContext\";\n\nexport default function Login() {\n  const { authApi } = useAuthContext();\n  const [login, setLogin] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    setLogin({ ...login, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = e => {\n    authApi.loading(); \n    e.preventDefault(); \n    authApi.login(login.username);                       \n  }\n\n  return (\n    <>\n    { authApi.state.loading && <p>Loading</p>}\n    { !authApi.state.loading && \n      <Container className=\"justify-content-center col-6 bg-light\">\n        { authApi.state.error && <Alert variant='danger'>{authApi.state.error}</Alert>}\n        <Form onSubmit={handleLogin} method=\"post\">\n          <Form.Row>\n            <InputText placeholder=\"Please input username\" type=\"text\" label=\"Username\" name=\"username\" value={login.username} onChange={handleChange}/>\n          </Form.Row>\n          <Form.Row>\n            <InputText placeholder=\"Please input password\" type=\"password\" label=\"Password\" name=\"password\" value={login.password} onChange={handleChange}/>\n          </Form.Row>\n            <Button variant=\"primary\" type=\"submit\" size=\"sm\">Login</Button>\n        </Form>\n      </Container> }\n    </>\n  );\n}","import React, { Suspense, lazy } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport HomePage from \"../views/HomePage\";\nimport Login from \"./auth/Login\";\n\n//lazy-loading each and every component might be an anti-pattern and it is up to the developers to wisely choose\n//withholding unnecessary code during initial download and lazy-loading them on demand, all without sacrificing user experience.\nconst NotFound = lazy(() => import(\"../views/NotFound\"));\nconst DogPage = lazy(() => import(\"../views/DogPage\"));\nconst MoviePage = lazy(() => import(\"../views/MoviePage\"));\nconst TaskPage = lazy(() => import(\"../views/TaskPage\"));\nconst Contact = lazy(() => import(\"../views/Contact\"));\n\nconst Routes = () => {\n  const { authApi } = useAuthContext();\n\n  const AuthRoute = ({ component, ...options }) => {\n    if (component === Login && authApi.state.isLoggedIn) {\n      return <Redirect to='/react-bootstrap-app' />;\n    } else {\n      const finalComponent = authApi.state.isLoggedIn ? component : Login;\n\n      return <Route {...options} component={finalComponent} />;\n    }\n  };\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route exact path='/react-bootstrap-app' component={HomePage} />\n        <Route path='/react-bootstrap-app' component={HomePage} />\n        <AuthRoute path='/login' component={Login} />\n        <Route path='/dogs' component={DogPage} />\n        <Route path='/movies' component={MoviePage} />\n        <AuthRoute path='/tasks' component={TaskPage} />\n        <Route path='/contact' component={Contact} />\n        <Route component={NotFound} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Routes from '../../Routes';\n\nconst Layout = () => (\n  <>\n    <Header />\n    <Container fluid>\n      <Routes />\n    </Container>\n    <Footer />\n  </>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Layout from \"./components/common/layout/Layout\";\nimport AuthContextProvider from \"./contexts/AuthContext\";\n\nconst App = () => (\n  <BrowserRouter>\n    <AuthContextProvider>\n      <Layout />\n    </AuthContextProvider>\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const get = async url => {\n  try {\n    //ES2017 rules\n    const response = await fetch(url);\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/*\n  data should be JSON format, such as\n    data = {\n      name: name,\n      email: email\n    }\n**/\nexport const post = async (url, data) => {\n  //ES6\n  fetch(url, {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  })\n    .then(response => response.json())\n    .then(result => console.log(\"result\", result))\n    .catch(err => console.log(err));\n};\n\n/*\n  data should be JSON format, such as\n    data = {\n      name: name,\n      email: email\n    }\n**/\nexport const put = async (url, data) => {\n  try {\n    //ES2017\n    const response = await fetch(url, {\n      method: \"put\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//cannot name delete because keywords crash\nexport const del = async url => {\n  try {\n    //ES2017\n    const response = await fetch(url, {\n      method: \"delete\"\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from \"react\";\nimport { Form, Col } from 'react-bootstrap';\n\nconst InputText = ({\n  name,\n  type,\n  placeholder,\n  onChange,\n  onBlur,\n  error,\n  label,\n  multiple = false,\n  value\n}) => {\n  return (\n    <>\n        <Form.Group as={Col}>\n            <Form.Label>{label}</Form.Label>\n            <Form.Control type={type} placeholder={placeholder} name={name} value={value} onChange={onChange} required/>\n        </Form.Group>\n      {/* {error && <div style={Style.error}>{error}</div>} */}\n    </>\n  );\n};\n\nexport default InputText;\n"],"sourceRoot":""}