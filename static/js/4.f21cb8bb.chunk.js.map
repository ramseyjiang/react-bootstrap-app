{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","services/EndlessReducer.js","contexts/EndlessContext.js","components/dogs/InfiniteScroll.jsx","views/DogPage.jsx"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","initState","data","loading","errorMessage","endlessReducer","state","action","type","Error","EndlessContext","createContext","EndlessContextProvider","children","useReducer","dispatch","useCallback","getData","url","get","then","result","message","moreData","isScrolling","window","innerHeight","Math","ceil","document","documentElement","scrollTop","offsetHeight","endlessApi","useMemo","Provider","value","InfiniteScrolls","useContext","DOGS_API_URL","useEffect","addEventListener","Container","Alert","variant","RenderLoading","Row","map","img","index","Col","key","className","Card","Img","src","DogPage","InfiniteScroll"],"mappings":"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","file":"static/js/4.f21cb8bb.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","// Actions\nexport const LOADING = \"LOADING\";\nexport const GET_DATA_SUCCESS = \"GET_DATA_SUCCESS\";\nexport const GET_DATA_FAILURE = \"GET_DATA_FAILURE\";\nexport const SET_LOAD_MORE = \"SET_LOAD_MORE\";\n\nexport const initState = {\n  data: [],\n  loading: false,\n  errorMessage: null\n};\n\nexport const endlessReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case GET_DATA_SUCCESS: {\n      return {\n        ...initState,\n        data: action.data\n      };\n    }\n    case GET_DATA_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: \"Something wrong!\"\n      };\n    }\n    case SET_LOAD_MORE: {\n      return {\n        ...initState,\n        data: [...state.data, ...action.data]\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer,\n} from \"react\";\nimport {\n  initState,\n  endlessReducer,\n  LOADING,\n  SET_LOAD_MORE,\n  GET_DATA_SUCCESS,\n  GET_DATA_FAILURE,\n} from \"../services/EndlessReducer\";\nimport { get } from \"../components/common/utils/Request\";\n\nconst EndlessContext = createContext();\n\nconst EndlessContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(endlessReducer, initState);\n\n  const loading = useCallback(() => dispatch({ type: LOADING }), []);\n\n  const getData = useCallback((url) => {\n    get(url).then((result) => {\n      try {\n        dispatch({ type: GET_DATA_SUCCESS, data: result.message });\n      } catch {\n        dispatch({ type: GET_DATA_FAILURE, data: result.message });\n      }\n    });\n  }, []);\n\n  const moreData = useCallback(\n    (url) => {\n      get(url).then((result) => {\n        try {\n          dispatch({\n            type: SET_LOAD_MORE,\n            data: result.message,\n          });\n        } catch {\n          dispatch({ type: GET_DATA_FAILURE, data: state.data.result });\n        }\n      });\n    },\n    [state]\n  );\n\n  const isScrolling = useCallback(\n    (url) => {\n      if (\n        window.innerHeight + Math.ceil(document.documentElement.scrollTop) !==\n        document.documentElement.offsetHeight\n      ) {\n        return;\n      } else {\n        moreData(url);\n      }\n    },\n    [moreData]\n  );\n\n  const endlessApi = useMemo(\n    () => ({ state, getData, moreData, loading, isScrolling }),\n    [state, getData, moreData, loading, isScrolling]\n  );\n\n  return (\n    <EndlessContext.Provider value={{ endlessApi }}>\n      {children}\n    </EndlessContext.Provider>\n  );\n};\n\nexport const useEndlessContext = () => {\n  return useContext(EndlessContext);\n};\n\nexport default EndlessContextProvider;\n","import React, { useEffect } from \"react\";\nimport { useEndlessContext } from \"../../contexts/EndlessContext\";\nimport RenderLoading from '../common/utils/RenderLoading';\nimport { Row, Col, Alert, Card, Container } from \"react-bootstrap\";\n\nconst InfiniteScrolls = () => {\n  const { endlessApi } = useEndlessContext();\n\n  const DOGS_API_URL = \"https://dog.ceo/api/breeds/image/random/12\";\n\n  useEffect(() => {\n    endlessApi.loading();\n    endlessApi.getData(DOGS_API_URL);\n    window.addEventListener(\"scroll\", () => {\n      endlessApi.isScrolling(DOGS_API_URL);\n    });\n  }, [])\n\n  return (\n    <Container>\n      <Alert variant='info'>This is an infinite scroll page to show dogs pictures.</Alert>\n      {endlessApi.state.loading && !endlessApi.state.errorMessage ? (\n          <RenderLoading />\n        ) : \n      (<Row>\n         {endlessApi.state.data && endlessApi.state.data.map((img, index) => (\n          <Col key={index} className=\"col-4 dog-card-margin\">\n            <Card>\n              <Card.Img\n                className='card-img-top mx-auto d-block dog-pic'\n                variant='top'\n                src={img}\n              />\n            </Card>\n          </Col>\n        ))}\n      </Row>)}\n    </Container>\n  );\n};\n\nexport default InfiniteScrolls;","import React from \"react\";\nimport EndlessContextProvider from \"../contexts/EndlessContext\";\nimport InfiniteScroll from \"../components/dogs/InfiniteScroll\";\n\nconst DogPage = () => {\n  return (\n    <EndlessContextProvider>\n      <InfiniteScroll />\n    </EndlessContextProvider>\n  );\n};\n\nexport default DogPage;"],"sourceRoot":""}