{"version":3,"sources":["components/common/utils/RenderLoading.jsx","components/common/utils/Storage.js","services/AuthReducer.js","firebase.js","contexts/AuthContext.js","components/common/layout/Navbar.jsx","components/common/layout/Header.jsx","components/common/utils/Date.js","components/common/layout/Footer.jsx","services/WeatherReducer.js","contexts/WeatherContext.js","components/weather/Weather.jsx","services/ExchangeReducer.js","contexts/ExchangeContext.js","components/exchange/CurrentExchangeRate.jsx","services/CoinReducer.js","contexts/CoinContext.js","components/coins/CurrentPrice.jsx","views/HomePage.jsx","components/auth/Login.jsx","components/auth/Register.jsx","components/Routes.js","components/common/layout/Layout.jsx","App.js","serviceWorker.js","index.js","components/common/utils/Request.js","components/common/form/InputText.jsx"],"names":["RenderLoading","className","animation","role","setLocal","key","value","localStorage","setItem","initAuth","isLoggedIn","loading","username","isAdmin","isManager","isStaff","isClient","error","authReducer","state","action","type","initAccess","loginSuccess","loginFailure","logout","getItem","removeItem","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","createContext","useAuthContext","useContext","AuthContextProvider","children","useReducer","dispatch","useEffect","login","useCallback","firebaseRegister","register","a","auth","createUserWithEmailAndPassword","email","password","then","res","user","catch","e","message","firebaseLogin","signInWithEmailAndPassword","authApi","useMemo","Provider","Navigation","useState","expanded","setExpanded","layoutColor","Navbar","fixed","expand","bg","variant","Brand","href","Toggle","onClick","aria-controls","Collapse","id","Nav","exact","to","Header","year","Date","getFullYear","Footer","initState","data","errorMessage","weatherReducer","Error","WeatherContext","WeatherContextProvider","getWeather","get","location","city","country","result","weatherApi","Weather","Alert","weather","main","Math","round","temp","description","CURRENCIES","initialized","rates","base","tableKeys","AUD","CNY","NZD","SGD","barData","exchangeReducer","generateBarData","filteredRates","Object","keys","filter","includes","labels","datasets","backgroundColor","map","ExchangeContext","ExchangeContextProvider","getLatestExchangeRate","EXCHANGE_API_URL","exchangeApi","CurrentExchangeRate","Container","getDate","month","getMonth","Table","striped","bordered","hover","floor","Number","style","height","width","margin","options","maintainAspectRatio","legend","display","scales","yAxes","ticks","beginAtZero","title","text","btc","ltc","eth","coinReducer","BTC","USD","LTC","ETH","CoinContext","CoinContextProvider","COIN_API_URL","getCoins","coinsApi","CurrentPrice","setInterval","Row","index","Col","Card","Body","Title","Text","toUpperCase","HomePage","Login","setLogin","handleChange","target","name","Form","onSubmit","preventDefault","method","InputText","placeholder","label","onChange","Button","size","Register","setRegister","NotFound","lazy","DogPage","MoviePage","TaskPage","Contact","Routes","AuthRoute","component","finalComponent","fallback","path","Layout","fluid","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","url","fetch","response","json","log","onBlur","multiple","Group","as","Label","Control","required"],"mappings":"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","file":"static/js/main.8e72c9c4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst RenderLoading = () => (\n  <div className=\"text-center\">\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nexport default RenderLoading;","export function getLocal(key) {\n  return localStorage.getItem(key);\n}\n\nexport function setLocal(key, value) {\n  return localStorage.setItem(key, value);\n}\n\nexport function removeLocal(key) {\n  localStorage.removeItem(key);\n}\n","import {\n  getLocal,\n  removeLocal,\n  setLocal\n} from \"../components/common/utils/Storage.js\";\n\nexport const initAuth = {\n  isLoggedIn: false,\n  loading: false,\n  username: null,\n  role: { isAdmin: false, isManager: false, isStaff: false, isClient: true }, //it is used to extension the roles management.\n  error: null\n};\n\n// Actions\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOADING = \"LOADING\";\nexport const INIT = \"INIT\";\n\nexport function authReducer(state, action) {\n  switch (action.type) {\n    case INIT:\n      return initAccess();\n    case LOADING:\n      return { ...state, loading: true };\n    case LOGIN_SUCCESS:\n      return loginSuccess(action);\n    case LOGIN_FAIL:\n      return loginFailure(action);\n    case LOGOUT:\n      return logout();\n    default:\n      return state;\n  }\n}\n\nconst initAccess = () => {\n  let username = getLocal(\"username\");\n  return { ...initAuth, isLoggedIn: username !== null, username: username };\n};\n\nconst loginSuccess = action => {\n  setLocal(\"username\", action.username);\n  return { ...initAuth, isLoggedIn: true, username: action.username };\n};\n\nconst loginFailure = action => {\n  setLocal(\"username\", null);\n  return { ...initAuth, error: action.error };\n};\n\nconst logout = () => {\n  removeLocal(\"username\");\n  return { ...initAuth };\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyB9YKwIHZ2c85281O7m1Ai6b6J-6On52OY\",\n  authDomain: \"react-hooks-aaf49.firebaseapp.com\",\n  databaseURL: \"https://react-hooks-aaf49.firebaseio.com\",\n  projectId: \"react-hooks-aaf49\",\n  storageBucket: \"react-hooks-aaf49.appspot.com\",\n  messagingSenderId: \"896651019085\",\n  appId: \"1:896651019085:web:33ee6cf95f456f247b2d04\",\n  measurementId: \"G-R7SVX0L3PG\",\n};\n\nexport default !firebase.apps.length\n  ? firebase.initializeApp(config)\n  : firebase.app();\n","import React, {\n  createContext,\n  useCallback,\n  useMemo,\n  useContext,\n  useEffect,\n  useReducer,\n} from \"react\";\n\nimport {\n  initAuth,\n  authReducer,\n  INIT,\n  LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../services/AuthReducer\";\n\nimport firebase from \"../firebase\";\n\nconst AuthContext = createContext();\n\nconst AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initAuth);\n\n  //The first time a user visits the website, it will only run once.\n  //The other scenario, a user closed website without logout, after the user come back, it will auto login.\n  useEffect(() => {\n    if (state.username === null) {\n      dispatch({ type: INIT });\n    }\n  }, [state.username]);\n\n  const loading = () => dispatch({ type: LOADING });\n\n  const login = useCallback((username) => {\n    if (username === \"ramsey\") {\n      return dispatch({ type: LOGIN_SUCCESS, username: username });\n    } else {\n      return dispatch({ type: LOGIN_FAIL, error: \"User not found!\" });\n    }\n  }, []);\n\n  // const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n  const firebaseRegister = useCallback(async (register) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(register.email, register.password)\n      .then((res) => {\n        if (res.user) {\n          return dispatch({ type: LOGIN_SUCCESS, username: register.username });\n        }\n      })\n      .catch((e) => {\n        return dispatch({ type: LOGIN_FAIL, error: e.message });\n      });\n  }, []);\n\n  const firebaseLogin = useCallback(async (login) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(login.email, login.password)\n      .then((res) => {\n        if (res.user) {\n          return dispatch({ type: LOGIN_SUCCESS, username: login.email });\n        }\n      })\n      .catch((e) => {\n        return dispatch({ type: LOGIN_FAIL, error: e.message });\n      });\n  }, []);\n\n  const logout = useCallback(() => {\n    dispatch({ type: LOGOUT });\n  }, []);\n\n  const authApi = useMemo(\n    () => ({ state, loading, logout, login, firebaseRegister, firebaseLogin }),\n    [logout, login, firebaseRegister, firebaseLogin, state]\n  );\n\n  return (\n    <AuthContext.Provider value={{ authApi }}>{children}</AuthContext.Provider>\n  );\n};\n\nexport const useAuthContext = () => {\n  return useContext(AuthContext);\n};\n\nexport default AuthContextProvider;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar,  Nav } from \"react-bootstrap\";\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\n\nconst Navigation = () => {\n  const { authApi } = useAuthContext();\n\n  //collapseOnSelect is not stable, it works for href, but not works for router to. That's why I build it by myself.\n  const [expanded, setExpanded] = useState(false);\n  const layoutColor = authApi.state.isLoggedIn ? \"primary\" : \"dark\";  //It is a cue for change different layout\n  \n  return (\n    <Navbar expanded={expanded} fixed='top' expand=\"sm\" bg={layoutColor} variant=\"dark\">\n      <Navbar.Brand href=\"/react-bootstrap-app\">HooksHut</Navbar.Brand>\n      <Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")} aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className=\"mr-auto\">\n          <NavLink\n            exact\n            className='nav-link'\n            to='/react-bootstrap-app'\n            onClick={() => setExpanded(false)}>\n            Home\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/dogs'\n            onClick={() => setExpanded(false)}>\n            Dogs\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/movies'\n            onClick={() => setExpanded(false)}>\n            Movies\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/tasks'\n            onClick={() => setExpanded(false)}>\n            Tasks\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/contact'\n            onClick={() => setExpanded(false)}>\n            Contact\n          </NavLink>\n        </Nav>\n        { !authApi.state.isLoggedIn && <Nav>\n          <NavLink exact to=\"/login\" className='nav-link'>Login</NavLink>\n          <NavLink exact to=\"/register\" className='nav-link'>Register</NavLink>\n        </Nav> }\n        { authApi.state.isLoggedIn && <Nav>\n          <NavLink to=\"/react-bootstrap-app\" onClick={() => authApi.logout()} className='nav-link'>Logout</NavLink>\n        </Nav> }\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nconst Header = () => {\n  return (\n    <>\n      <Navbar />\n    </>\n  );\n};\n\nexport default Header;","export function year() {\n  return new Date().getFullYear();\n}\n\nexport function month() {\n  let month = new Date().getMonth() + 1;\n  if (month >= 10) {\n    return month;\n  } else {\n    return \"0\" + month;\n  }\n}\n\nexport function day() {\n  return new Date().getDate();\n}\n","import React from \"react\";\nimport {year} from \"../utils/Date.js\"\n\nconst Footer = () => {\n    return (\n      <div className=\"font-small bg-dark\">\n        <div className=\"text-center text-white py-1\">© {year()} Copyright:Ramsey Jiang</div>\n      </div>\n    );\n};\n\nexport default Footer;","// Actions\nexport const LOADING = \"LOADING\";\nexport const GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\";\nexport const GET_WEATHER_FAILURE = \"GET_WEATHER_FAILURE\";\n\nexport const initState = {\n  data: null,\n  loading: false,\n  errorMessage: null\n};\n\nexport const weatherReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case GET_WEATHER_SUCCESS: {\n      return {\n        ...initState,\n        data: action.data\n      };\n    }\n    case GET_WEATHER_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: \"Something wrong!\"\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer\n} from \"react\";\nimport {\n  initState,\n  weatherReducer,\n  GET_WEATHER_SUCCESS,\n  GET_WEATHER_FAILURE\n} from \"../services/WeatherReducer\";\nimport { get } from \"../components/common/utils/Request\";\n\nconst WeatherContext = createContext();\n\nconst WeatherContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(weatherReducer, initState);\n\n  const IP_API_URL = \"https://ipapi.co/json/\";\n  const WEATHER_API_URL =\n    \"https://api.openweathermap.org/data/2.5/weather?APPID=3a58f9dd1f1515ec0dba25894ccea202&q=\";\n\n  const getWeather = useCallback(() => {\n    get(IP_API_URL).then(res => {\n      let location = res.city + \",\" + res.country;\n      get(WEATHER_API_URL + location).then(result => {\n        try {\n          dispatch({ type: GET_WEATHER_SUCCESS, data: result });\n        } catch {\n          dispatch({ type: GET_WEATHER_FAILURE, data: result });\n        }\n      });\n    });\n  }, [IP_API_URL]);\n\n  const weatherApi = useMemo(() => ({ state, getWeather }), [\n    state,\n    getWeather\n  ]);\n\n  return (\n    <WeatherContext.Provider value={{ weatherApi }}>\n      {children}\n    </WeatherContext.Provider>\n  );\n};\n\nexport const useWeatherContext = () => {\n  return useContext(WeatherContext);\n};\n\nexport default WeatherContextProvider;\n","import React, {useEffect} from \"react\";\nimport { useWeatherContext } from \"../../contexts/WeatherContext\";\nimport RenderLoading from '../common/utils/RenderLoading';\nimport { Alert } from \"react-bootstrap\";\n\n\nconst Weather = () => {\n  const { weatherApi } = useWeatherContext();\n  useEffect(() => {\n    weatherApi.getWeather(); \n  }, []);\n\n  return (\n    <>\n      {!weatherApi.state.data ? \n      (<RenderLoading />) : \n      (<Alert className=\"justify-content-center weather-bar\" variant='info'>\n        Welcome, current weather is {weatherApi.state.data.weather[0].main}, temperature is {Math.round(((weatherApi.state.data.main.temp * 9/5 - 459.67) - 32)*5/9)}°C, conditions: {weatherApi.state.data.weather[0].description}\n      </Alert>)}\n    </>\n  );\n}\n\nexport default Weather;","export const LOADING = \"LOADING\";\nexport const GET_LATEST_SUCCESS = \"GET_LATEST_SUCCESS\";\nexport const GET_LATEST_FAILURE = \"GET_LATEST_FAILURE\";\n\nconst CURRENCIES = [\"AUD\", \"CNY\", \"NZD\", \"SGD\"];\n\nexport const initState = {\n  data: {\n    initialized: false,\n    rates: {},\n    base: \"USD\",\n    tableKeys: {\n      AUD: \"AUD\",\n      CNY: \"CNY\",\n      NZD: \"NZD\",\n      SGD: \"SGD\"\n    },\n    barData: {}\n  },\n  loading: false,\n  errorMessage: null\n};\n\nexport const exchangeReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case GET_LATEST_SUCCESS: {\n      return {\n        ...initState,\n        data: {\n          initialized: true,\n          rates: action.data.rates,\n          base: action.data.base,\n          barData: generateBarData(action.data.rates),\n          tableKeys: initState.data.tableKeys\n        }\n      };\n    }\n    case GET_LATEST_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: \"Something wrong!\"\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n\nconst generateBarData = rates => {\n  let filteredRates = Object.keys(rates).filter(key =>\n    CURRENCIES.includes(key)\n  );\n\n  return {\n    labels: filteredRates,\n    datasets: [\n      {\n        backgroundColor: \"green\",\n        data: filteredRates.map(key => rates[key])\n      }\n    ]\n  };\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer\n} from \"react\";\nimport {\n  initState,\n  exchangeReducer,\n  GET_LATEST_SUCCESS,\n  GET_LATEST_FAILURE\n} from \"../services/ExchangeReducer\";\n\nimport { get } from \"../components/common/utils/Request\";\n\nconst ExchangeContext = createContext();\n\nconst ExchangeContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(exchangeReducer, initState);\n  const EXCHANGE_API_URL = \"https://api.exchangeratesapi.io/\";\n\n  const getLatestExchangeRate = useCallback(() => {\n    get(EXCHANGE_API_URL + \"latest?base=USD\").then(result => {\n      try {\n        dispatch({ type: GET_LATEST_SUCCESS, data: result });\n      } catch {\n        dispatch({ type: GET_LATEST_FAILURE, data: result });\n      }\n    });\n  }, []);\n\n  const exchangeApi = useMemo(() => ({ state, getLatestExchangeRate }), [\n    state,\n    getLatestExchangeRate\n  ]);\n\n  return (\n    <ExchangeContext.Provider value={{ exchangeApi }}>\n      {children}\n    </ExchangeContext.Provider>\n  );\n};\n\nexport const useExchangeContext = () => {\n  return useContext(ExchangeContext);\n};\n\nexport default ExchangeContextProvider;\n","import React, {useEffect} from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useExchangeContext } from \"../../contexts/ExchangeContext\";\nimport {year, month, day} from \"../common/utils/Date.js\"\n\nconst CurrentExchangeRate = () => {\n  const { exchangeApi } = useExchangeContext();\n\n  useEffect(() => {\n    exchangeApi.getLatestExchangeRate();\n  }, []);\n\n  const options = {\n    maintainAspectRatio: false,\n    legend: { display: false },\n    scales: {\n      yAxes: [{ ticks: { beginAtZero: true } }],\n    },\n    title: {\n      display: true,\n      text: \"USD Exchanges Rates\",\n    },\n  };\n  \n  return (\n    <Container className=\"exchange-rate-bg rounded\">\n      <h3 className=\"text-center\">Exchange rates on {day()}-{month()}-{year()}</h3>\n\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            {Object.keys(exchangeApi.state.data.tableKeys).map(key => (\n              <th key={key}>{key}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>USD</td>\n            {exchangeApi.state.data.initialized && Object.keys(exchangeApi.state.data.tableKeys).map(key => (\n              <td key={key}>{Math.floor(Number(exchangeApi.state.data.rates[key]) * 100) / 100}</td>\n            ))}\n          </tr>\n        </tbody>\n      </Table>\n\n      <div style={{ height: \"200px\", width:\"auto\", margin: \"0 auto\" }}>\n        <Bar data={exchangeApi.state.data.barData} options={options} />\n      </div>\n    </Container>\n  );\n};\n\nexport default CurrentExchangeRate;","// Actions\nexport const LOADING = \"LOADING\";\nexport const GET_COIN_SUCCESS = \"GET_COIN_SUCCESS\";\nexport const GET_COIN_FAILURE = \"GET_COIN_FAILURE\";\n\nexport const initState = {\n  data: {\n    btc: \"\",\n    ltc: \"\",\n    eth: \"\",\n  },\n  loading: false,\n  errorMessage: null,\n};\n\nexport const coinReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case GET_COIN_SUCCESS: {\n      return {\n        ...initState,\n        data: {\n          btc: action.data.BTC.USD,\n          ltc: action.data.LTC.USD,\n          eth: action.data.ETH.USD,\n        },\n      };\n    }\n    case GET_COIN_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: \"Something wrong!\",\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer,\n} from \"react\";\nimport {\n  initState,\n  coinReducer,\n  LOADING,\n  GET_COIN_SUCCESS,\n  GET_COIN_FAILURE,\n} from \"../services/CoinReducer\";\nimport { get } from \"../components/common/utils/Request\";\n\nconst CoinContext = createContext();\n\nconst CoinContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(coinReducer, initState);\n\n  const COIN_API_URL =\n    \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD\";\n\n  const loading = useCallback(() => dispatch({ type: LOADING }), []);\n\n  const getCoins = useCallback(() => {\n    get(COIN_API_URL).then((result) => {\n      try {\n        dispatch({ type: GET_COIN_SUCCESS, data: result });\n      } catch {\n        dispatch({ type: GET_COIN_FAILURE, data: result });\n      }\n    });\n  }, [COIN_API_URL]);\n\n  const coinsApi = useMemo(() => ({ state, getCoins, loading }), [\n    state,\n    getCoins,\n    loading,\n  ]);\n\n  return (\n    <CoinContext.Provider value={{ coinsApi }}>{children}</CoinContext.Provider>\n  );\n};\n\nexport const useCoinContext = () => {\n  return useContext(CoinContext);\n};\n\nexport default CoinContextProvider;\n","import React, { useEffect } from \"react\";\nimport { useCoinContext } from \"../../contexts/CoinContext\";\nimport RenderLoading from '../common/utils/RenderLoading';\nimport { Row, Col, Card, Alert, Container } from \"react-bootstrap\";\n\nconst CurrentPrice = () => {\n  const { coinsApi } = useCoinContext();\n\n  useEffect(()=>{\n    coinsApi.loading();\n    coinsApi.getCoins();\n    setInterval(() => (coinsApi.getCoins()), 5000);//When it is switched to the other link it will show the warning in the comment. \n    //to do abort soon\n    /*\n    Our component “subscribes” to the promise, but it never “unsubscribes” or cancels the request. \n    If for any reason, our component is unmounted before the promise resolves, our code will try to “set state” (calling setBananas) on an unmounted component. This will throw a warning:\n    Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application.\n    To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\n    */ \n  }, []);\n\n  return (\n    <Container className=\"coins-bg rounded\">\n      <Alert className=\"justify-content-center\" variant='primary'>The first part is a real time price about BTC, ETH and LTC.</Alert>\n      {coinsApi.state.loading && !coinsApi.state.errorMessage ? (\n          <RenderLoading />\n        ) : \n      (<Row>\n        {Object.keys(coinsApi.state.data).map((key, index) => (\n          <Col key={index} className=\"col-4 dog-card-margin\">\n            <Card className=\"text-center\" bg=\"info\">\n              <Card.Body>\n                <Card.Title>${coinsApi.state.data[key]}</Card.Title>\n                <Card.Text>1 {key.toUpperCase()}</Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>)}\n    </Container>\n  );\n};\n\nexport default CurrentPrice;","import React from \"react\";\nimport Weather from '../components/weather/Weather';\nimport WeatherContextProvider from \"../contexts/WeatherContext\";\n\nimport ExchangeContextProvider from \"../contexts/ExchangeContext\";\nimport CurrentExchangeRate from '../components/exchange/CurrentExchangeRate';\n\nimport CoinContextProvider from \"../contexts/CoinContext\";\nimport CurrentPrice from \"../components/coins/CurrentPrice\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <WeatherContextProvider>\n        <Weather />\n      </WeatherContextProvider>\n      <CoinContextProvider>\n        <CurrentPrice />\n      </CoinContextProvider>\n      <ExchangeContextProvider>\n        <CurrentExchangeRate />\n      </ExchangeContextProvider>\n    </>\n  );\n};\n\nexport default HomePage;","import React, { useState } from \"react\";\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport InputText from '../common/form/InputText';\nimport { useAuthContext } from \"../../contexts/AuthContext\";\nimport RenderLoading from '../common/utils/RenderLoading';\n\nexport default function Login() {\n  const { authApi } = useAuthContext();\n  const [login, setLogin] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    setLogin({ ...login, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = e => {\n    authApi.loading(); \n    e.preventDefault(); \n    authApi.firebaseLogin(login);\n    authApi.login(login.username);                       \n  }\n\n  return (\n    <>\n    { authApi.state.loading && (<RenderLoading />)}\n    { !authApi.state.loading && \n      <Container className=\"justify-content-center col-6 bg-light\">\n        { authApi.state.error && <Alert variant='danger'>{authApi.state.error}</Alert>}\n        <Form onSubmit={handleLogin} method=\"post\">\n          <Form.Row>\n            <InputText placeholder=\"Please input email\" type=\"text\" label=\"Email\" name=\"email\" value={login.email} onChange={handleChange}/>\n          </Form.Row>\n          <Form.Row>\n            <InputText placeholder=\"Please input password\" type=\"password\" label=\"Password\" name=\"password\" value={login.password} onChange={handleChange}/>\n          </Form.Row>\n            <Button variant=\"primary\" type=\"submit\" size=\"sm\">Login</Button>\n        </Form>\n      </Container> }\n    </>\n  );\n}","import React, { useState } from \"react\";\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport InputText from '../common/form/InputText';\nimport { useAuthContext } from \"../../contexts/AuthContext\";\nimport RenderLoading from '../common/utils/RenderLoading';\n\nexport default function Register() {\n  const { authApi } = useAuthContext();\n  const [register, setRegister] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    setRegister({ ...register, [e.target.name]: e.target.value });\n  };\n\n  const handleRegister = e => {\n    authApi.loading(); \n    e.preventDefault(); \n    authApi.firebaseRegister(register);\n    authApi.login(register.username);                       \n  }\n\n  return (\n    <>\n    { authApi.state.loading && (<RenderLoading />)}\n    { !authApi.state.loading && \n      <Container className=\"justify-content-center col-6 bg-light\">\n        { authApi.state.error && <Alert variant='danger'>{authApi.state.error}</Alert>}\n        <Form onSubmit={handleRegister} method=\"post\">\n          <Form.Row>\n            <InputText placeholder=\"Please input username\" type=\"text\" label=\"Username\" name=\"username\" value={register.username} onChange={handleChange}/>\n          </Form.Row>\n          <Form.Row>\n            <InputText placeholder=\"Please input email\" type=\"email\" label=\"Email\" name=\"email\" value={register.email} onChange={handleChange}/>\n          </Form.Row>\n          <Form.Row>\n            <InputText placeholder=\"Please input password\" type=\"password\" label=\"Password\" name=\"password\" value={register.password} onChange={handleChange}/>\n          </Form.Row>\n            <Button variant=\"primary\" type=\"submit\" size=\"sm\">Register</Button>\n        </Form>\n      </Container> }\n    </>\n  );\n}","import React, { Suspense, lazy } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport HomePage from \"../views/HomePage\";\nimport Login from \"./auth/Login\";\nimport Register from \"./auth/Register\";\nimport RenderLoading from \"./common/utils/RenderLoading\";\n\n//lazy-loading each and every component might be an anti-pattern and it is up to the developers to wisely choose\n//withholding unnecessary code during initial download and lazy-loading them on demand, all without sacrificing user experience.\nconst NotFound = lazy(() => import(\"../views/NotFound\"));\nconst DogPage = lazy(() => import(\"../views/DogPage\"));\nconst MoviePage = lazy(() => import(\"../views/MoviePage\"));\nconst TaskPage = lazy(() => import(\"../views/TaskPage\"));\nconst Contact = lazy(() => import(\"../views/Contact\"));\n\nconst Routes = () => {\n  const { authApi } = useAuthContext();\n\n  const AuthRoute = ({ component, ...options }) => {\n    if (component === Login && authApi.state.isLoggedIn) {\n      return <Redirect to='/react-bootstrap-app' />;\n    } else {\n      const finalComponent = authApi.state.isLoggedIn ? component : Login;\n\n      return <Route {...options} component={finalComponent} />;\n    }\n  };\n\n  return (\n    <Suspense fallback={<RenderLoading />}>\n      <Switch>\n        <Route exact path='/react-bootstrap-app' component={HomePage} />\n        <Route path='/react-bootstrap-app' component={HomePage} />\n        <AuthRoute path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route path='/dogs' component={DogPage} />\n        <Route path='/movies' component={MoviePage} />\n        <AuthRoute path='/tasks' component={TaskPage} />\n        <Route path='/contact' component={Contact} />\n        <Route component={NotFound} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Routes from '../../Routes';\n\nconst Layout = () => (\n  <>\n    <Header />\n    <Container fluid>\n      <Routes />\n    </Container>\n    <Footer />\n  </>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Layout from \"./components/common/layout/Layout\";\nimport AuthContextProvider from \"./contexts/AuthContext\";\n\nconst App = () => (\n  <BrowserRouter>\n    <AuthContextProvider>\n      <Layout />\n    </AuthContextProvider>\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const get = async url => {\n  try {\n    //ES2017 rules\n    const response = await fetch(url);\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/*\n  data should be JSON format, such as\n    data = {\n      name: name,\n      email: email\n    }\n**/\nexport const post = async (url, data) => {\n  //ES6\n  fetch(url, {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  })\n    .then(response => response.json())\n    .then(result => console.log(\"result\", result))\n    .catch(err => console.log(err));\n};\n\n/*\n  data should be JSON format, such as\n    data = {\n      name: name,\n      email: email\n    }\n**/\nexport const put = async (url, data) => {\n  try {\n    //ES2017\n    const response = await fetch(url, {\n      method: \"put\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//cannot name delete because keywords crash\nexport const del = async url => {\n  try {\n    //ES2017\n    const response = await fetch(url, {\n      method: \"delete\"\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from \"react\";\nimport { Form, Col } from 'react-bootstrap';\n\nconst InputText = ({\n  name,\n  type,\n  placeholder,\n  onChange,\n  onBlur,\n  error,\n  label,\n  multiple = false,\n  value\n}) => {\n  return (\n    <>\n        <Form.Group as={Col}>\n            <Form.Label>{label}</Form.Label>\n            <Form.Control type={type} placeholder={placeholder} name={name} value={value} onChange={onChange} required/>\n        </Form.Group>\n      {/* {error && <div style={Style.error}>{error}</div>} */}\n    </>\n  );\n};\n\nexport default InputText;\n"],"sourceRoot":""}