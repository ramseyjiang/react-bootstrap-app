{"version":3,"sources":["services/MovieReducer.js","contexts/MovieContext.js","components/movies/MovieInfo.jsx","components/movies/MovieList.jsx","components/movies/MovieSearch.jsx","views/MoviePage.jsx"],"names":["initState","data","loading","errorMessage","moviesReducer","state","action","type","console","log","error","Error","MovieContext","createContext","useMovieContext","useContext","MovieContextProvider","children","useReducer","dispatch","useCallback","searchMovie","url","get","then","result","Response","Search","empty","movieApi","useMemo","Provider","value","MovieInfo","movie","Poster","Card","className","Title","Header","Img","variant","src","Year","Footer","MovieList","Container","RenderLoading","Alert","Row","map","index","Col","key","useState","searchValue","setSearchValue","MOVIE_API_URL","useEffect","Form","Group","as","sm","Control","placeholder","onChange","e","target","Button","size","onClick","preventDefault","MoviePage","MovieSearch"],"mappings":"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","file":"static/js/6.268a1c3c.chunk.js","sourcesContent":["// Actions\nexport const LOADING = \"LOADING\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\nexport const SEARCH_FAILURE = \"SEARCH_FAILURE\";\nexport const INPUT_EMPTY = \"INPUT_EMPTY\";\n\nexport const initState = {\n  data: [],\n  loading: false,\n  errorMessage: null\n};\n\nexport const moviesReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case SEARCH_SUCCESS: {\n      console.log();\n      return {\n        ...initState,\n        data: action.data\n      };\n    }\n    case SEARCH_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: action.error\n      };\n    }\n    case INPUT_EMPTY: {\n      return {\n        ...state,\n        loading: true,\n        errorMessage:\n          \"Please input search movie name or something else for search a movie\"\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer\n} from \"react\";\nimport {\n  initState,\n  moviesReducer,\n  LOADING,\n  SEARCH_SUCCESS,\n  SEARCH_FAILURE,\n  INPUT_EMPTY\n} from \"../services/MovieReducer\";\nimport { get } from \"../components/common/utils/Request\";\n\nconst MovieContext = createContext();\n\nconst MovieContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(moviesReducer, initState);\n\n  const loading = useCallback(() => dispatch({ type: LOADING }), []);\n\n  const searchMovie = useCallback(url => {\n    get(url).then(result => {\n      if (result.Response === \"True\") {\n        dispatch({ type: SEARCH_SUCCESS, data: result.Search });\n      } else {\n        dispatch({ type: SEARCH_FAILURE, error: result.Error });\n      }\n    });\n  }, []);\n\n  const empty = useCallback(() => dispatch({ type: INPUT_EMPTY }), []);\n\n  const movieApi = useMemo(() => ({ loading, searchMovie, empty, state }), [\n    loading,\n    searchMovie,\n    empty,\n    state\n  ]);\n\n  return (\n    <MovieContext.Provider value={{ movieApi }}>\n      {children}\n    </MovieContext.Provider>\n  );\n};\n\nexport const useMovieContext = () => {\n  return useContext(MovieContext);\n};\n\nexport default MovieContextProvider;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst MovieInfo = ( { movie } ) => {\n  return (\n    <>\n      {movie.Poster !== \"N/A\" && <Card className='text-center'>\n        {movie.Title ? (\n          <Card.Header className=\"movie-poster-title-size\">{movie.Title}</Card.Header>\n        ) : (\n          \"\"\n        )}\n        <Card.Img\n          className='card-img-top mx-auto d-block movie-poster'\n          variant='top'\n          src={movie.Poster}\n        />\n        {movie.Year ? (\n          <Card.Footer>\n            <small className=\"text-muted\">Year: {movie.Year}</small>\n          </Card.Footer>\n        ) : (\n          \"\"\n        )}\n      </Card>}\n    </>\n  );\n};\n\nexport default MovieInfo;","import React from \"react\";\nimport { useMovieContext } from \"../../contexts/MovieContext\";\nimport MovieInfo from './MovieInfo';\nimport RenderLoading from '../common/utils/RenderLoading';\nimport { Row, Col, Alert, Container } from \"react-bootstrap\";\n\n\nconst MovieList = () => {\n    const { movieApi } = useMovieContext();\n\n    return (\n      <Container>\n        {movieApi.state.loading && !movieApi.state.errorMessage ? (\n          <RenderLoading />\n        ) : movieApi.state.errorMessage ? (\n          <Alert variant='danger'>{movieApi.state.errorMessage}</Alert>\n        ) : (\n          <Row>\n            {movieApi.state.data && movieApi.state.data.map((movie, index) => (\n              <Col className=\"col-6 movie-card-bottom\" key={index}>\n                <MovieInfo movie={movie} />\n              </Col>\n            ))}\n          </Row>\n        )}\n      </Container>\n    );\n  };\n  \n  export default MovieList;","import React, { useState, useEffect } from \"react\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useMovieContext } from \"../../contexts/MovieContext\";\n\nconst Search = () => {\n  const { movieApi } = useMovieContext();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const MOVIE_API_URL = \"https://www.omdbapi.com/?apikey=f91c3148&s=\";\n  const DEFAULT_SEARCH = \"Fast&Furious\";\n\n  const handleSearchChange = e => {\n    setSearchValue(e.target.value);\n  }\n\n  // movieApi.searchMovie(MOVIE_API_URL + DEFAULT_SEARCH);\n  useEffect(()=>{\n    if(searchValue === '') {\n      movieApi.searchMovie(MOVIE_API_URL + DEFAULT_SEARCH)\n    } \n  }, []);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    movieApi.loading();\n    if(searchValue !== '') {\n      movieApi.searchMovie(MOVIE_API_URL + searchValue)\n    } else {\n      movieApi.empty();\n    }\n  }\n\n  return (\n    <Container>\n      <Form>\n        <Form.Group as={Row}>\n          <Col sm={6}>\n            <Form.Control type=\"text\" placeholder=\"For example: Fast&Furious\" onChange={handleSearchChange} value={searchValue}/>\n          </Col>\n          <Col sm={6}>\n            <Button variant=\"primary\" type=\"submit\" size=\"sm\" onClick={handleSearch}>Search</Button>{' '}\n          </Col>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Search;","import React from \"react\";\nimport MovieContextProvider from \"../contexts/MovieContext\";\nimport MovieList from \"../components/movies/MovieList\";\nimport MovieSearch from \"../components/movies/MovieSearch\";\n\nconst MoviePage = () => {\n  return (\n    <MovieContextProvider>\n      <MovieSearch />\n      <MovieList />\n    </MovieContextProvider>\n  );\n};\n\nexport default MoviePage;"],"sourceRoot":""}