{"version":3,"sources":["components/common/utils/RenderLoading.jsx","components/common/form/InputText.jsx","components/common/utils/Request.js","components/common/utils/Date.js","components/common/utils/Storage.js","services/AuthReducer.js","firebase.js","contexts/AuthContext.js","components/common/layout/Navbar.jsx","components/common/layout/Header.jsx","components/common/layout/Footer.jsx","services/WeatherReducer.js","contexts/WeatherContext.js","components/weather/Weather.jsx","services/ProfileReducer.js","contexts/ProfileContext.js","components/profile/ShowProfile.jsx","components/profile/Timeline.jsx","views/HomePage.jsx","components/auth/Login.jsx","components/auth/Register.jsx","components/Routes.js","components/common/layout/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["RenderLoading","className","animation","role","InputText","name","type","placeholder","onChange","label","onBlur","error","disabled","multiple","value","useState","hidden","setHidden","Group","Label","Control","required","Check","onClick","e","defaultProps","get","url","a","fetch","response","json","console","log","year","Date","getFullYear","month","getMonth","day","getDate","removeLocal","key","localStorage","removeItem","initAuth","isLoggedIn","loading","username","isAdmin","isManager","isStaff","isClient","authReducer","state","action","initAccess","loginSuccess","loginFailure","logout","getItem","setItem","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","googleProvider","auth","GoogleAuthProvider","fbProvider","FacebookAuthProvider","AuthContext","createContext","useAuthContext","useContext","AuthContextProvider","children","useReducer","dispatch","useEffect","firebaseRegister","useCallback","register","createUserWithEmailAndPassword","email","password","then","res","user","catch","message","firebaseLogin","login","signInWithEmailAndPassword","socialSignIn","socialMedia","addScope","signInWithPopup","displayName","signOut","authApi","useMemo","Provider","Navigation","expanded","setExpanded","layoutColor","Navbar","fixed","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","exact","to","Header","Footer","htmlFor","rel","target","initState","data","errorMessage","weatherReducer","Error","WeatherContext","WeatherContextProvider","getWeather","location","city","country","result","weatherApi","Weather","Alert","weather","main","Math","round","temp","description","profileReducer","ProfileContext","ProfileContextProvider","getProfile","GITHUB_API_URL","profileApi","ShowProfile","Container","Figure","Image","alt","src","avatar_url","ListGroup","Item","TimeLine","obj","Home","pos","content","Coins","Dogs","Movies","Tasks","Auth","Object","keys","map","index","HomePage","Login","setLogin","handleChange","Form","onSubmit","preventDefault","method","Button","size","Register","setRegister","NotFound","lazy","CoinPage","DogPage","MoviePage","TaskPage","Routes","AuthRoute","component","options","finalComponent","fallback","path","Layout","fluid","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iIAAA,4BAWeA,IARO,kBACpB,yBAAKC,UAAU,eACb,kBAAC,IAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAMF,UAAU,WAAhB,kB,oECFAG,EAAY,SAAC,GAWZ,IAVLC,EAUI,EAVJA,KACAC,EASI,EATJA,KACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,SAGAC,GAII,EANJC,OAMI,EALJC,MAKI,EAJJF,OAEAG,GAEI,EAHJC,SAGI,EAFJD,UACAE,EACI,EADJA,MACI,EACwBC,oBAAS,GADjC,mBACGC,EADH,KACWC,EADX,KAOJ,OACE,kBAAC,IAAKC,MAAN,KACE,kBAAC,IAAKC,MAAN,KAAaV,GACb,kBAAC,IAAKW,QAAN,CAAcd,KAAMU,EAAS,OAASV,EAAMC,YAAaA,EAAaF,KAAMA,EAAMS,MAAOA,EAAON,SAAUA,EAAUI,SAAUA,EAAUS,UAAQ,IACxI,aAAPhB,GAAqB,kBAAC,IAAKiB,MAAN,CAAYhB,KAAK,WAAWG,MAAOO,EAAS,gBAAkB,gBAAiBO,QARrF,SAAAC,GACCP,GAAR,IAAXD,QAyBJZ,EAAUqB,aAAe,CACvBpB,KAAM,OACNC,KAAM,OACNC,YAAa,GACbC,SAAU,aACVG,MAAO,GACPF,MAAO,GACPI,UAAU,EACVD,UAAU,EACVE,MAAO,MAGMV,O,8FCxDFsB,EAAG,uCAAG,WAAMC,GAAN,eAAAC,EAAA,+EAGQC,MAAMF,GAHd,cAGTG,EAHS,gBAIFA,EAASC,OAJP,wEAMfC,QAAQC,IAAR,MANe,yDAAH,uD,gCCAT,SAASC,IACd,OAAO,IAAIC,MAAOC,cAGb,SAASC,IACd,IAAIA,GAAQ,IAAIF,MAAOG,WAAa,EACpC,OAAID,GAAS,GACJA,EAEA,IAAMA,EAIV,SAASE,IACd,OAAO,IAAIJ,MAAOK,UAdpB,uG,0NCQO,SAASC,EAAYC,GAC1BC,aAAaC,WAAWF,GCHnB,IAAMG,EAAW,CACtBC,YAAY,EACZC,SAAS,EACTC,SAAU,KACV7C,KAAM,CAAE8C,SAAS,EAAOC,WAAW,EAAOC,SAAS,EAAOC,UAAU,GACpEzC,MAAO,MAUF,SAAS0C,EAAYC,EAAOC,GACjC,OAAQA,EAAOjD,MACb,IAJgB,OAKd,OAAOkD,IACT,IAPmB,UAQjB,OAAO,eAAKF,EAAZ,CAAmBP,SAAS,IAC9B,IAZmB,UAajB,OAAOU,EAAaF,GACtB,IAbgB,OAcd,OAAOG,EAAaH,GACtB,IAdkB,SAehB,OAAOI,IACT,QACE,OAAOL,GAIb,IAAME,EAAa,WACjB,IDvCuBd,ECuCnBM,GDvCmBN,ECuCC,WDtCjBC,aAAaiB,QAAQlB,ICuC5B,OAAO,eAAKG,EAAZ,CAAsBC,WAAyB,OAAbE,EAAmBA,SAAUA,KAG3DS,EAAe,SAACF,GDvCf,IAAkBb,EAAK5B,ECyC5B,ODzCuB4B,ECwCd,WDxCmB5B,ECwCPyC,EAAOP,SDvCrBL,aAAakB,QAAQnB,EAAK5B,GCwC1B,eAAK+B,EAAZ,CAAsBC,YAAY,EAAME,SAAUO,EAAOP,YAGrDU,EAAe,SAACH,GAEpB,OADAd,EAAY,YACL,eAAKI,EAAZ,CAAsBlC,MAAO4C,EAAO5C,SAGhCgD,EAAS,WAEb,OADAlB,EAAY,YACL,eAAKI,I,iBCzCC,G,MAACiB,IAASC,KAAKC,OAE1BF,IAASG,MADTH,IAASI,cAZE,CACbC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAOJC,EAAiB,IAAIb,IAASc,KAAKC,mBACnCC,EAAa,IAAIhB,IAASc,KAAKG,qBCEtCC,EAAcC,0BA8FPC,EAAiB,WAC5B,OAAOC,qBAAWH,IAGLI,EAhGa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBC,qBAAWjC,EAAaR,GADN,mBACrCS,EADqC,KAC9BiC,EAD8B,KAK5CC,qBAAU,WACe,OAAnBlC,EAAMN,UACRuC,EAAS,CAAEjF,KFXG,WEaf,CAACgD,EAAMN,WAEV,IAAMD,EAAU,kBAAMwC,EAAS,CAAEjF,KFhBZ,aEkBfmF,EAAmBC,sBAAW,uCAAC,WAAOC,GAAP,SAAA/D,EAAA,sDACnCkC,EACGc,OACAgB,+BAA+BD,EAASE,MAAOF,EAASG,UACxDC,MAAK,SAACC,GACL,GAAIA,EAAIC,KACN,OAAOV,EAAS,CACdjF,KF5BW,UE6BX0C,SAAU2C,EAAS3C,cAIxBkD,OAAM,SAAC1E,GACN,OAAO+D,EAAS,CAAEjF,KFjCN,OEiCkBK,MAAOa,EAAE2E,aAbR,2CAAD,sDAejC,IAEGC,EAAgBV,sBAAW,uCAAC,WAAOW,GAAP,SAAAzE,EAAA,sDAChCkC,EACGc,OACA0B,2BAA2BD,EAAMR,MAAOQ,EAAMP,UAC9CC,MAAK,SAACC,GACL,GAAIA,EAAIC,KACN,OAAOV,EAAS,CAAEjF,KF5CL,UE4CoB0C,SAAUqD,EAAMR,WAGpDK,OAAM,SAAC1E,GACN,OAAO+D,EAAS,CAAEjF,KF/CN,OE+CkBK,MAAOa,EAAE2E,aAVX,2CAAD,sDAY9B,IAEGI,EAAeb,sBAAW,uCAAC,WAAOc,GAAP,SAAA5E,EAAA,sDACX,WAAhB4E,GACFA,EAAc7B,GACF8B,SAAS,8CAErBD,EAAc1B,EAGhBhB,EACGc,OACA8B,gBAAgBF,GAChBT,MAAK,SAACC,GACL,OAAOT,EAAS,CAAEjF,KFhEH,UEgEkB0C,SAAUgD,EAAIC,KAAKU,iBAErDT,OAAM,SAACvF,GACN,OAAO4E,EAAS,CAAEjF,KFlEN,OEkEkBK,MAAOA,EAAMwF,aAfhB,2CAAD,sDAiB7B,IAEGxC,EAAS+B,uBAAY,WACzB5B,EACGc,OACAgC,UACAb,MAAK,WACJ,OAAOR,EAAS,CAAEjF,KF1EJ,cE4Ef4F,OAAM,SAAC1E,GACN,OAAO+D,EAAS,CAAEjF,KF9EN,OE8EkBK,MAAOa,EAAE2E,eAE1C,IAEGU,EAAUC,mBACd,iBAAO,CACLxD,QACAP,UACAY,SACA8B,mBACAW,gBACAG,kBAEF,CAAC5C,EAAQ8B,EAAkBW,EAAeG,EAAcjD,IAG1D,OACE,kBAAC0B,EAAY+B,SAAb,CAAsBjG,MAAO,CAAE+F,YAAYxB,ICjDhC2B,EAzDI,WAAO,IAChBH,EAAY3B,IAAZ2B,QADe,EAIS9F,oBAAS,GAJlB,mBAIhBkG,EAJgB,KAINC,EAJM,KAKjBC,EAAcN,EAAQvD,MAAMR,WAAa,UAAY,OAE3D,OACE,kBAACsE,EAAA,EAAD,CAAQH,SAAUA,EAAUI,MAAM,MAAMC,OAAO,KAAKC,GAAIJ,EAAaK,QAAQ,QAC3E,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,wBAAnB,YACA,kBAACN,EAAA,EAAOO,OAAR,CAAepG,QAAS,kBAAM2F,GAAYD,GAAmB,aAAaW,gBAAc,qBACxF,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAK9H,UAAU,WACb,kBAAC,IAAD,CACE+H,OAAK,EACL/H,UAAU,WACVgI,GAAG,uBACH1G,QAAS,kBAAM2F,GAAY,KAJ7B,QAOA,kBAAC,IAAD,CACEjH,UAAU,WACVgI,GAAG,SACH1G,QAAS,kBAAM2F,GAAY,KAH7B,SAMA,kBAAC,IAAD,CACEjH,UAAU,WACVgI,GAAG,QACH1G,QAAS,kBAAM2F,GAAY,KAH7B,QAMA,kBAAC,IAAD,CACEjH,UAAU,WACVgI,GAAG,UACH1G,QAAS,kBAAM2F,GAAY,KAH7B,UAMA,kBAAC,IAAD,CACEjH,UAAU,WACVgI,GAAG,SACH1G,QAAS,kBAAM2F,GAAY,KAH7B,WAOCL,EAAQvD,MAAMR,YAAc,kBAACiF,EAAA,EAAD,KAC7B,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,SAAShI,UAAU,YAArC,SACA,kBAAC,IAAD,CAAS+H,OAAK,EAACC,GAAG,YAAYhI,UAAU,YAAxC,aAEA4G,EAAQvD,MAAMR,YAAc,kBAACiF,EAAA,EAAD,KAC5B,kBAAC,IAAD,CAASE,GAAG,uBAAuB1G,QAAS,kBAAMsF,EAAQlD,UAAU1D,UAAU,YAA9E,cC5CKiI,EARA,WACb,OACE,oCACE,kBAAC,EAAD,Q,gBCUSC,EAZA,WACX,OACE,yBAAKlI,UAAU,sBACb,yBAAKA,UAAU,+BAAf,QACGiC,cADH,cACqB,2BAAOkG,QAAQ,UAAf,gBADrB,IACmE,IACnE,uBAAGV,KAAK,kCAAiCW,IAAI,sBAAsBC,OAAO,SAASrI,UAAU,mBAAkB,kBAAC,IAAD,OAF/G,IAEiI,IACjI,uBAAGyH,KAAK,qDAAqDY,OAAO,SAASD,IAAI,sBAAsBpI,UAAU,mBAAkB,kBAAC,IAAD,U,gBCL9HsI,EAAY,CACvBC,KAAM,KACNzF,SAAS,EACT0F,aAAc,MAGHC,EAAiB,SAACpF,EAAOC,GACpC,OAAQA,EAAOjD,MACb,IAZmB,UAajB,OAAO,eAAKgD,EAAZ,CAAmBP,SAAS,IAE9B,IAd+B,sBAe7B,OAAO,eACFwF,EADL,CAEEC,KAAMjF,EAAOiF,OAGjB,IAnB+B,sBAoB7B,OAAO,eACFD,EADL,CAEEE,aAAc,qBAGlB,QACE,MAAM,IAAIE,Q,QCdVC,EAAiB3D,0BAsCR4D,EApCgB,SAAC,GAAkB,IAAhBxD,EAAe,EAAfA,SAAe,EACrBC,qBAAWoD,EAAgBH,GADN,mBACxCjF,EADwC,KACjCiC,EADiC,KAOzCuD,EAAapD,uBAAY,WAC7BhE,YALiB,0BAKDqE,MAAK,SAAAC,GACnB,IAAI+C,EAAW/C,EAAIgD,KAAO,IAAMhD,EAAIiD,QACpCvH,YALF,4FAKwBqH,GAAUhD,MAAK,SAAAmD,GACnC,IACE3D,EAAS,CAAEjF,KD3Bc,sBC2BakI,KAAMU,IAC5C,SACA3D,EAAS,CAAEjF,KD5Bc,sBC4BakI,KAAMU,aAIjD,CAfgB,2BAiBbC,EAAarC,mBAAQ,iBAAO,CAAExD,QAAOwF,gBAAe,CACxDxF,EACAwF,IAGF,OACE,kBAACF,EAAe7B,SAAhB,CAAyBjG,MAAO,CAAEqI,eAC/B9D,I,gBCrBQ+D,EAjBC,WAAO,IACbD,ED2CDhE,qBAAWyD,GC3CVO,WAKR,OAJA3D,qBAAU,WACR2D,EAAWL,eACV,IAGD,oCACIK,EAAW7F,MAAMkF,KAElB,kBAACa,EAAA,EAAD,CAAOpJ,UAAU,qCAAqCuH,QAAQ,QAA9D,+BAC8B2B,EAAW7F,MAAMkF,KAAKc,QAAQ,GAAGC,KAD/D,oBACsFC,KAAKC,MAA8D,GAApB,EAAlCN,EAAW7F,MAAMkF,KAAKe,KAAKG,KAAS,EAAI,OAAU,IAAM,GAD3J,sBAC+KP,EAAW7F,MAAMkF,KAAKc,QAAQ,GAAGK,aAFhN,kBAAC3J,EAAA,EAAD,QCVMuI,EAAY,CACvBC,KAAM,KACNzF,SAAS,EACT0F,aAAc,MAGHmB,EAAiB,SAACtG,EAAOC,GACpC,OAAQA,EAAOjD,MACb,IAZmB,UAajB,OAAO,eAAKgD,EAAZ,CAAmBP,SAAS,IAE9B,IAd+B,sBAe7B,OAAO,eACFwF,EADL,CAEEC,KAAMjF,EAAOiF,OAGjB,IAnB+B,sBAoB7B,OAAO,eACFD,EADL,CAEEE,aAAc,qBAGlB,QACE,MAAM,IAAIE,QCdVkB,EAAiB5E,0BAkCR6E,EAhCgB,SAAC,GAAkB,IAAhBzE,EAAe,EAAfA,SAAe,EACrBC,qBAAWsE,EAAgBrB,GADN,mBACxCjF,EADwC,KACjCiC,EADiC,KAMzCwE,EAAarE,uBAAY,WAC7BhE,YAAIsI,4CAA2BjE,MAAK,SAACmD,GACnC,IACE3D,EAAS,CAAEjF,KDxBgB,sBCwBWkI,KAAMU,IAC5C,SACA3D,EAAS,CAAEjF,KDzBgB,sBCyBWkI,KAAMU,UAG/C,CAXoB,kCAajBe,EAAanD,mBAAQ,iBAAO,CAAExD,QAAOyG,gBAAe,CACxDzG,EACAyG,IAGF,OACE,kBAACF,EAAe9C,SAAhB,CAAyBjG,MAAO,CAAEmJ,eAC/B5E,I,gBCMQ6E,EAzCK,WAAO,IACjBD,EDwCD9E,qBAAW0E,GCxCVI,WAKR,OAJAzE,qBAAU,WACNyE,EAAWF,eACZ,IAGD,oCACIE,EAAW3G,MAAMkF,KAElB,kBAAC2B,EAAA,EAAD,CAAWlK,UAAU,qCACpB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,kBAACmK,EAAA,EAAD,CAAQnK,UAAU,aAChB,kBAACmK,EAAA,EAAOC,MAAR,CACEC,IAAI,QACJC,IAAKN,EAAW3G,MAAMkF,KAAKgC,eAIjC,yBAAKvK,UAAU,SACb,mHACA,+JACA,qPAGF,yBAAKA,UAAU,UACb,kBAACwK,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,KAAX,CAAgBlD,QAAQ,WAAxB,wDACA,kBAACiD,EAAA,EAAUC,KAAX,CAAgBlD,QAAQ,UAAxB,6DACA,kBAACiD,EAAA,EAAUC,KAAX,CAAgBlD,QAAQ,WAAxB,kDACA,kBAACiD,EAAA,EAAUC,KAAX,CAAgBlD,QAAQ,QAAxB,+DACA,kBAACiD,EAAA,EAAUC,KAAX,CAAgBlD,QAAQ,QAAxB,4DAvBP,kBAACxH,EAAA,EAAD,QCXQ,SAAS2K,IACtB,IAAMC,EAAM,CACVC,KAAM,CAACC,IAAK,0BAA2BC,QAAS,qGAChDC,MAAO,CAACF,IAAK,2BAA4BC,QAAS,6EAClDE,KAAM,CAACH,IAAK,0BAA2BC,QAAS,2EAChDG,OAAQ,CAACJ,IAAK,2BAA4BC,QAAS,iGACnDI,MAAO,CAACL,IAAK,0BAA2BC,QAAS,uFACjDK,KAAM,CAACN,IAAK,2BAA4BC,QAAS,yJAGnD,OACE,kBAACZ,EAAA,EAAD,CAAWlK,UAAU,sCACnB,wBAAIA,UAAU,eAAd,iBACA,yBAAKA,UAAU,YACdoL,OAAOC,KAAKV,GAAKW,KAAI,SAAC7I,EAAK8I,GAAN,OACpB,yBAAK9I,IAAK8I,EAAOvL,UAAW2K,EAAIlI,GAAKoI,KACnC,yBAAK7K,UAAU,WACb,4BAAKyC,GACL,+BAAQkI,EAAIlI,GAAKqI,gBCZ7B,IAceU,GAdE,WACf,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,KACE,kBAACd,EAAD,MACA,kBAAC,EAAD,S,oCCVO,SAASe,KAAS,IACvB7E,EAAY3B,IAAZ2B,QADsB,EAEJ9F,mBAAS,CACjCiC,SAAU,GACV8C,SAAU,KAJkB,mBAEvBO,EAFuB,KAEhBsF,EAFgB,KAOxBC,EAAe,SAAApK,GACnBmK,EAAS,eAAKtF,EAAN,gBAAc7E,EAAE8G,OAAOjI,KAAOmB,EAAE8G,OAAOxH,UAiBjD,OACE,oCACE+F,EAAQvD,MAAMP,SAAY,kBAAC/C,EAAA,EAAD,OACzB6G,EAAQvD,MAAMP,SACf,kBAACoH,EAAA,EAAD,CAAWlK,UAAU,iDACjB4G,EAAQvD,MAAM3C,OAAS,kBAAC0I,EAAA,EAAD,CAAO7B,QAAQ,UAAUX,EAAQvD,MAAM3C,OAChE,kBAACkL,GAAA,EAAD,CAAMC,SApBQ,SAAAtK,GAClBqF,EAAQ9D,UACRvB,EAAEuK,iBACFlF,EAAQT,cAAcC,IAiBW2F,OAAO,OAAO/L,UAAU,gBAEnD,kBAACG,GAAA,EAAD,CAAWG,YAAY,qBAAqBD,KAAK,OAAOG,MAAM,QAAQJ,KAAK,QAAQS,MAAOuF,EAAMR,MAAOrF,SAAUoL,IACjH,kBAACxL,GAAA,EAAD,CAAWG,YAAY,wBAAwBD,KAAK,WAAWG,MAAM,WAAWJ,KAAK,WAAWS,MAAOuF,EAAMP,SAAUtF,SAAUoL,IACjI,kBAACK,GAAA,EAAD,CAAQzE,QAAQ,UAAUlH,KAAK,SAAS4L,KAAK,MAA7C,YCnCK,SAASC,KAAY,IAC1BtF,EAAY3B,IAAZ2B,QADyB,EAED9F,mBAAS,CACvCiC,SAAU,GACV8C,SAAU,KAJqB,mBAE1BH,EAF0B,KAEhByG,EAFgB,KAO3BR,EAAe,SAAApK,GACnB4K,EAAY,eAAKzG,EAAN,gBAAiBnE,EAAE8G,OAAOjI,KAAOmB,EAAE8G,OAAOxH,UAiBvD,OACE,oCACE+F,EAAQvD,MAAMP,SAAY,kBAAC/C,EAAA,EAAD,OACzB6G,EAAQvD,MAAMP,SACf,kBAACoH,EAAA,EAAD,CAAWlK,UAAU,iDACjB4G,EAAQvD,MAAM3C,OAAS,kBAAC0I,EAAA,EAAD,CAAO7B,QAAQ,UAAUX,EAAQvD,MAAM3C,OAChE,kBAACkL,GAAA,EAAD,CAAMC,SApBW,SAAAtK,GACrBqF,EAAQ9D,UACRvB,EAAEuK,iBACFlF,EAAQpB,iBAAiBE,IAiBWqG,OAAO,OAAO/L,UAAU,gBAEtD,kBAACG,GAAA,EAAD,CAAWG,YAAY,wBAAwBD,KAAK,OAAOG,MAAM,WAAWJ,KAAK,WAAWS,MAAO6E,EAAS3C,SAAUxC,SAAUoL,IAChI,kBAACxL,GAAA,EAAD,CAAWG,YAAY,qBAAqBD,KAAK,QAAQG,MAAM,QAAQJ,KAAK,QAAQS,MAAO6E,EAASE,MAAOrF,SAAUoL,IACrH,kBAACxL,GAAA,EAAD,CAAWG,YAAY,wBAAwBD,KAAK,WAAWG,MAAM,WAAWJ,KAAK,WAAWS,MAAO6E,EAASG,SAAUtF,SAAUoL,IACpI,kBAACK,GAAA,EAAD,CAAQzE,QAAQ,UAAUlH,KAAK,SAAS4L,KAAK,MAA7C,eCjCV,IAAMG,GAAWC,gBAAK,kBAAM,iCACtBC,GAAWD,gBAAK,kBAAM,uDACtBE,GAAUF,gBAAK,kBAAM,iCACrBG,GAAYH,gBAAK,kBAAM,iCACvBI,GAAWJ,gBAAK,kBAAM,iCAoCbK,GAlCA,WAAO,IACZ9F,EAAY3B,IAAZ2B,QAEF+F,EAAY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAcC,EAAc,6BAC/C,GAAID,IAAcnB,IAAS7E,EAAQvD,MAAMR,WACvC,OAAO,kBAAC,IAAD,CAAUmF,GAAG,yBACf,GAAI4E,IAAcV,IAAYtF,EAAQvD,MAAMR,WACjD,OAAO,kBAAC,IAAD,CAAUmF,GAAG,yBACf,GAAI4E,IAAcV,IAAatF,EAAQvD,MAAMR,WAE7C,CACL,IAAMiK,EAAiBlG,EAAQvD,MAAMR,WAAa+J,EAAYnB,GAE9D,OAAO,kBAAC,IAAD,iBAAWoB,EAAX,CAAoBD,UAAWE,KAJtC,OAAO,kBAAC,IAAD,iBAAWD,EAAX,CAAoBD,UAAWV,OAQ1C,OACE,kBAAC,WAAD,CAAUa,SAAU,kBAAChN,EAAA,EAAD,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgI,OAAK,EAACiF,KAAK,uBAAuBJ,UAAWpB,KACpD,kBAAC,IAAD,CAAOwB,KAAK,uBAAuBJ,UAAWpB,KAC9C,kBAACmB,EAAD,CAAWK,KAAK,SAASJ,UAAWnB,KACpC,kBAACkB,EAAD,CAAWK,KAAK,YAAYJ,UAAWV,KACvC,kBAAC,IAAD,CAAOc,KAAK,SAASJ,UAAWN,KAChC,kBAAC,IAAD,CAAOU,KAAK,QAAQJ,UAAWL,KAC/B,kBAAC,IAAD,CAAOS,KAAK,UAAUJ,UAAWJ,KACjC,kBAACG,EAAD,CAAWK,KAAK,SAASJ,UAAWH,KACpC,kBAAC,IAAD,CAAOG,UAAWR,QC5BXa,GAVA,kBACb,oCACE,kBAAC,EAAD,MACA,kBAAC/C,EAAA,EAAD,CAAWgD,OAAK,GACd,kBAAC,GAAD,OAEF,kBAAC,EAAD,QCCWC,GARH,kBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,SCIcC,QACW,cAA7BC,OAAOvE,SAASwE,UAEe,UAA7BD,OAAOvE,SAASwE,UAEhBD,OAAOvE,SAASwE,SAASC,MACvB,2DCRNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhI,MAAK,SAAAiI,GACJA,EAAaC,gBAEd/H,OAAM,SAAAvF,GACLqB,QAAQrB,MAAMA,EAAMwF,c","file":"static/js/main.97bba43c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst RenderLoading = () => (\n  <div className=\"text-center\">\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nexport default RenderLoading;","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types'\nimport { Form } from 'react-bootstrap';\n\nconst InputText = ({\n  name,\n  type,\n  placeholder,\n  onChange,\n  onBlur,\n  error,\n  label,\n  multiple,\n  disabled,\n  value\n}) => {\n  const [hidden, setHidden] = useState(false);\n\n  const handleClick = e => {\n    hidden === false ? setHidden(true) : setHidden(false);\n  }\n\n  return (\n    <Form.Group>\n      <Form.Label>{label}</Form.Label>\n      <Form.Control type={hidden ? \"text\" : type} placeholder={placeholder} name={name} value={value} onChange={onChange} disabled={disabled} required/>\n      {name===\"password\" && <Form.Check type=\"checkbox\" label={hidden ? \"Hide password\" : \"Show password\"} onClick={handleClick} />}\n    </Form.Group>\n  );\n};\n\nInputText.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  error: PropTypes.string,\n  label: PropTypes.string,\n  multiple: PropTypes.bool,\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n}\n\nInputText.defaultProps = {\n  name: 'name',\n  type: 'text',\n  placeholder: '',\n  onChange: ()=>{},\n  error: '',\n  label: '',\n  multiple: false,\n  disabled: false,\n  value: null,\n}\n\nexport default InputText;\n","export const get = async url => {\n  try {\n    //ES2017 rules\n    const response = await fetch(url);\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/*\n  data should be JSON format, such as\n    data = {\n      name: name,\n      email: email\n    }\n**/\nexport const post = async (url, data) => {\n  //ES6\n  fetch(url, {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  })\n    .then(response => response.json())\n    .then(result => console.log(\"result\", result))\n    .catch(err => console.log(err));\n};\n\n/*\n  data should be JSON format, such as\n    data = {\n      name: name,\n      email: email\n    }\n**/\nexport const put = async (url, data) => {\n  try {\n    //ES2017\n    const response = await fetch(url, {\n      method: \"put\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//cannot name delete because keywords crash\nexport const del = async url => {\n  try {\n    //ES2017\n    const response = await fetch(url, {\n      method: \"delete\"\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n","export function year() {\n  return new Date().getFullYear();\n}\n\nexport function month() {\n  let month = new Date().getMonth() + 1;\n  if (month >= 10) {\n    return month;\n  } else {\n    return \"0\" + month;\n  }\n}\n\nexport function day() {\n  return new Date().getDate();\n}\n","export function getLocal(key) {\n  return localStorage.getItem(key);\n}\n\nexport function setLocal(key, value) {\n  return localStorage.setItem(key, value);\n}\n\nexport function removeLocal(key) {\n  localStorage.removeItem(key);\n}\n","import {\n  getLocal,\n  removeLocal,\n  setLocal,\n} from \"../components/common/utils/Storage.js\";\n\nexport const initAuth = {\n  isLoggedIn: false,\n  loading: false,\n  username: null,\n  role: { isAdmin: false, isManager: false, isStaff: false, isClient: true }, //it is used to extension the roles management.\n  error: null,\n};\n\n// Actions\nexport const SUCCESS = \"SUCCESS\";\nexport const FAIL = \"FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOADING = \"LOADING\";\nexport const INIT = \"INIT\";\n\nexport function authReducer(state, action) {\n  switch (action.type) {\n    case INIT:\n      return initAccess();\n    case LOADING:\n      return { ...state, loading: true };\n    case SUCCESS:\n      return loginSuccess(action);\n    case FAIL:\n      return loginFailure(action);\n    case LOGOUT:\n      return logout();\n    default:\n      return state;\n  }\n}\n\nconst initAccess = () => {\n  let username = getLocal(\"username\");\n  return { ...initAuth, isLoggedIn: username !== null, username: username };\n};\n\nconst loginSuccess = (action) => {\n  setLocal(\"username\", action.username);\n  return { ...initAuth, isLoggedIn: true, username: action.username };\n};\n\nconst loginFailure = (action) => {\n  removeLocal(\"username\");\n  return { ...initAuth, error: action.error };\n};\n\nconst logout = () => {\n  removeLocal(\"username\");\n  return { ...initAuth };\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyB9YKwIHZ2c85281O7m1Ai6b6J-6On52OY\",\n  authDomain: \"react-hooks-aaf49.firebaseapp.com\",\n  databaseURL: \"https://react-hooks-aaf49.firebaseio.com\",\n  projectId: \"react-hooks-aaf49\",\n  storageBucket: \"react-hooks-aaf49.appspot.com\",\n  messagingSenderId: \"896651019085\",\n  appId: \"1:896651019085:web:33ee6cf95f456f247b2d04\",\n  measurementId: \"G-R7SVX0L3PG\",\n};\n\nexport default !firebase.apps.length\n  ? firebase.initializeApp(config)\n  : firebase.app();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const fbProvider = new firebase.auth.FacebookAuthProvider();\n","import React, {\n  createContext,\n  useCallback,\n  useMemo,\n  useContext,\n  useEffect,\n  useReducer,\n} from \"react\";\n\nimport {\n  initAuth,\n  authReducer,\n  INIT,\n  LOADING,\n  SUCCESS,\n  FAIL,\n  LOGOUT,\n} from \"../services/AuthReducer\";\n\nimport firebase, { googleProvider, fbProvider } from \"../firebase\";\n\nconst AuthContext = createContext();\n\nconst AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initAuth);\n\n  //The first time a user visits the website, it will only run once.\n  //The other scenario, a user closed website without logout, after the user come back, it will auto login.\n  useEffect(() => {\n    if (state.username === null) {\n      dispatch({ type: INIT });\n    }\n  }, [state.username]);\n\n  const loading = () => dispatch({ type: LOADING });\n\n  const firebaseRegister = useCallback(async (register) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(register.email, register.password)\n      .then((res) => {\n        if (res.user) {\n          return dispatch({\n            type: SUCCESS,\n            username: register.username,\n          });\n        }\n      })\n      .catch((e) => {\n        return dispatch({ type: FAIL, error: e.message });\n      });\n  }, []);\n\n  const firebaseLogin = useCallback(async (login) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(login.email, login.password)\n      .then((res) => {\n        if (res.user) {\n          return dispatch({ type: SUCCESS, username: login.email });\n        }\n      })\n      .catch((e) => {\n        return dispatch({ type: FAIL, error: e.message });\n      });\n  }, []);\n\n  const socialSignIn = useCallback(async (socialMedia) => {\n    if (socialMedia === \"google\") {\n      socialMedia = googleProvider;\n      socialMedia.addScope(\"https://www.googleapis.com/auth/plus.login\");\n    } else {\n      socialMedia = fbProvider;\n    }\n\n    firebase\n      .auth()\n      .signInWithPopup(socialMedia)\n      .then((res) => {\n        return dispatch({ type: SUCCESS, username: res.user.displayName });\n      })\n      .catch((error) => {\n        return dispatch({ type: FAIL, error: error.message });\n      });\n  }, []);\n\n  const logout = useCallback(() => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        return dispatch({ type: LOGOUT });\n      })\n      .catch((e) => {\n        return dispatch({ type: FAIL, error: e.message });\n      });\n  }, []);\n\n  const authApi = useMemo(\n    () => ({\n      state,\n      loading,\n      logout,\n      firebaseRegister,\n      firebaseLogin,\n      socialSignIn,\n    }),\n    [logout, firebaseRegister, firebaseLogin, socialSignIn, state]\n  );\n\n  return (\n    <AuthContext.Provider value={{ authApi }}>{children}</AuthContext.Provider>\n  );\n};\n\nexport const useAuthContext = () => {\n  return useContext(AuthContext);\n};\n\nexport default AuthContextProvider;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar,  Nav } from \"react-bootstrap\";\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\n\nconst Navigation = () => {\n  const { authApi } = useAuthContext();\n\n  //collapseOnSelect is not stable, it works for href, but not works for router to. That's why I build it by myself.\n  const [expanded, setExpanded] = useState(false);\n  const layoutColor = authApi.state.isLoggedIn ? \"primary\" : \"dark\";  //It is a cue for change different layout\n  \n  return (\n    <Navbar expanded={expanded} fixed='top' expand=\"sm\" bg={layoutColor} variant=\"dark\">\n      <Navbar.Brand href=\"/react-bootstrap-app\">HooksHut</Navbar.Brand>\n      <Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")} aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className=\"mr-auto\">\n          <NavLink\n            exact\n            className='nav-link'\n            to='/react-bootstrap-app'\n            onClick={() => setExpanded(false)}>\n            Home\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/coins'\n            onClick={() => setExpanded(false)}>\n            Coins\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/dogs'\n            onClick={() => setExpanded(false)}>\n            Dogs\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/movies'\n            onClick={() => setExpanded(false)}>\n            Movies\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/tasks'\n            onClick={() => setExpanded(false)}>\n            Tasks\n          </NavLink>\n        </Nav>\n        { !authApi.state.isLoggedIn && <Nav>\n          <NavLink exact to=\"/login\" className='nav-link'>Login</NavLink>\n          <NavLink exact to=\"/register\" className='nav-link'>Register</NavLink>\n        </Nav> }\n        { authApi.state.isLoggedIn && <Nav>\n          <NavLink to=\"/react-bootstrap-app\" onClick={() => authApi.logout()} className='nav-link'>Logout</NavLink>\n        </Nav> }\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nconst Header = () => {\n  return (\n    <>\n      <Navbar />\n    </>\n  );\n};\n\nexport default Header;","import React from \"react\";\nimport {year} from \"../utils/Date.js\"\nimport { FaLinkedin, FaGithub } from 'react-icons/fa';\n\nconst Footer = () => {\n    return (\n      <div className=\"font-small bg-dark\" >\n        <div className=\"text-center text-white py-1\">\n        © {year()} Copyright:<label htmlFor=\"footer\">Ramsey Jiang</label> {' '}\n        <a href=\"https://github.com/ramseyjiang/\"rel=\"noopener noreferrer\" target=\"_blank\" className=\"link-icon-color\"><FaGithub /></a> {' '}\n        <a href=\"https://www.linkedin.com/in/ramsey-jiang-360950101\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"link-icon-color\"><FaLinkedin /></a>\n        </div>\n      </div>\n    );\n};\n\nexport default Footer;","// Actions\nexport const LOADING = \"LOADING\";\nexport const GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\";\nexport const GET_WEATHER_FAILURE = \"GET_WEATHER_FAILURE\";\n\nexport const initState = {\n  data: null,\n  loading: false,\n  errorMessage: null\n};\n\nexport const weatherReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case GET_WEATHER_SUCCESS: {\n      return {\n        ...initState,\n        data: action.data\n      };\n    }\n    case GET_WEATHER_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: \"Something wrong!\"\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer\n} from \"react\";\nimport {\n  initState,\n  weatherReducer,\n  GET_WEATHER_SUCCESS,\n  GET_WEATHER_FAILURE\n} from \"../services/WeatherReducer\";\nimport { get } from \"../components/common/utils/Request\";\n\nconst WeatherContext = createContext();\n\nconst WeatherContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(weatherReducer, initState);\n\n  const IP_API_URL = \"https://ipapi.co/json/\";\n  const WEATHER_API_URL =\n    \"https://api.openweathermap.org/data/2.5/weather?APPID=3a58f9dd1f1515ec0dba25894ccea202&q=\";\n\n  const getWeather = useCallback(() => {\n    get(IP_API_URL).then(res => {\n      let location = res.city + \",\" + res.country;\n      get(WEATHER_API_URL + location).then(result => {\n        try {\n          dispatch({ type: GET_WEATHER_SUCCESS, data: result });\n        } catch {\n          dispatch({ type: GET_WEATHER_FAILURE, data: result });\n        }\n      });\n    });\n  }, [IP_API_URL]);\n\n  const weatherApi = useMemo(() => ({ state, getWeather }), [\n    state,\n    getWeather\n  ]);\n\n  return (\n    <WeatherContext.Provider value={{ weatherApi }}>\n      {children}\n    </WeatherContext.Provider>\n  );\n};\n\nexport const useWeatherContext = () => {\n  return useContext(WeatherContext);\n};\n\nexport default WeatherContextProvider;\n","import React, {useEffect} from \"react\";\nimport { useWeatherContext } from \"../../contexts/WeatherContext\";\nimport RenderLoading from '../common/utils/RenderLoading';\nimport { Alert } from \"react-bootstrap\";\n\n\nconst Weather = () => {\n  const { weatherApi } = useWeatherContext();\n  useEffect(() => {\n    weatherApi.getWeather(); \n  }, []);\n\n  return (\n    <>\n      {!weatherApi.state.data ? \n      (<RenderLoading />) : \n      (<Alert className=\"justify-content-center weather-bar\" variant='info'>\n        Welcome, current weather is {weatherApi.state.data.weather[0].main}, temperature is {Math.round(((weatherApi.state.data.main.temp * 9/5 - 459.67) - 32)*5/9)}°C, conditions: {weatherApi.state.data.weather[0].description}\n      </Alert>)}\n    </>\n  );\n}\n\nexport default Weather;","// Actions\nexport const LOADING = \"LOADING\";\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const GET_PROFILE_FAILURE = \"GET_PROFILE_FAILURE\";\n\nexport const initState = {\n  data: null,\n  loading: false,\n  errorMessage: null,\n};\n\nexport const profileReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case GET_PROFILE_SUCCESS: {\n      return {\n        ...initState,\n        data: action.data,\n      };\n    }\n    case GET_PROFILE_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: \"Something wrong!\",\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer,\n} from \"react\";\nimport {\n  initState,\n  profileReducer,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_FAILURE,\n} from \"../services/ProfileReducer\";\nimport { get } from \"../components/common/utils/Request\";\n\nconst ProfileContext = createContext();\n\nconst ProfileContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(profileReducer, initState);\n\n  const GITHUB_API_URL = \"https://api.github.com/users/\";\n  const username = \"ramseyjiang\";\n\n  const getProfile = useCallback(() => {\n    get(GITHUB_API_URL + username).then((result) => {\n      try {\n        dispatch({ type: GET_PROFILE_SUCCESS, data: result });\n      } catch {\n        dispatch({ type: GET_PROFILE_FAILURE, data: result });\n      }\n    });\n  }, [GITHUB_API_URL]);\n\n  const profileApi = useMemo(() => ({ state, getProfile }), [\n    state,\n    getProfile,\n  ]);\n\n  return (\n    <ProfileContext.Provider value={{ profileApi }}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n\nexport const useProfileContext = () => {\n  return useContext(ProfileContext);\n};\n\nexport default ProfileContextProvider;\n","import React, {useEffect} from \"react\";\nimport { useProfileContext } from \"../../contexts/ProfileContext\";\nimport RenderLoading from '../common/utils/RenderLoading';\nimport { Container, Figure, ListGroup } from \"react-bootstrap\";\n\nconst ShowProfile = () => {\n  const { profileApi } = useProfileContext();\n  useEffect(() => {\n      profileApi.getProfile(); \n  }, []);\n\n  return (\n    <>\n      {!profileApi.state.data ? \n      (<RenderLoading />) : \n      (<Container className=\"profile-bg rounded profile-bottom\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <Figure className=\"thumbnail\">\n              <Figure.Image\n                alt=\"image\"\n                src={profileApi.state.data.avatar_url}\n              />\n            </Figure>\n          </div>\n          <div className=\"col-9\">\n            <span>I am Ramsey Jiang, looking for a role as fullstack or backend or react developer.</span>\n            <p>I am a New Zealand Permanent Resident and I have over 10 years experience as a fullstack developer. I Enjoy jogging and fishing.</p>\n            <p>Good at by following techs, such as PHP, Zend, WordPress,Silver Stripe, Laravel, Synfomy, React, VueJS, JQuery, MySQL, Mongo, Memcache, Redis, Ajax, HTML/HTML5, CSS/CSS3, Github, Docker, NodeJs, Python, and so on.</p>\n            \n          </div>\n          <div className=\"col-12\">\n            <ListGroup>\n              <ListGroup.Item variant=\"success\">Certification : ICAgile Certified Professional (ICP)</ListGroup.Item>\n              <ListGroup.Item variant=\"danger\">Held 10 million hits per hour on a e-commerical website. </ListGroup.Item>\n              <ListGroup.Item variant=\"warning\">Optimised an e-commerical tool 5 times faster.</ListGroup.Item>\n              <ListGroup.Item variant=\"info\">Developed training and HR applications for councils before.</ListGroup.Item>\n              <ListGroup.Item variant=\"dark\">Had payment and e-commercial application experience.</ListGroup.Item>\n            </ListGroup>\n          </div>\n        </div>\n      </Container>)}\n    </>\n  );\n}\n  \nexport default ShowProfile;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nexport default function TimeLine() {\n  const obj = {\n    Home: {pos: \"timeline-container left\", content: 'It will show the current location weather info and author profile and the website guide timeline.'},\n    Coins: {pos: \"timeline-container right\", content: 'It will show BTC, LTC and ETH and several exchange rates with USA dollar.'},\n    Dogs: {pos: \"timeline-container left\", content: 'It is an infinite scroll page to show dogs pics from a third party api.'},\n    Movies: {pos: \"timeline-container right\", content: 'The default search is <<Fast & Furious>>, it will send a search request to a third party API.'},\n    Tasks: {pos: \"timeline-container left\", content: 'It is protected before a use login. After a user login it will show CRUD for tasks.'},\n    Auth: {pos: \"timeline-container right\", content: 'Auth includes register and login, it uses firebases for database and cloud server. When register or login, it will send a async request to firebase.'}\n  };\n\n  return (\n    <Container className=\"timeline-bg timeline-title rounded\">\n      <h3 className=\"text-center\">Website Guide</h3>\n      <div className=\"timeline\">\n      {Object.keys(obj).map((key, index) => (\n        <div key={index} className={obj[key].pos}>\n          <div className=\"content\">\n            <h5>{key}</h5>\n            <small>{obj[key].content}</small>\n          </div>\n        </div>\n      ))}\n      </div>\n    </Container>\n  );\n}","import React from \"react\";\nimport Weather from '../components/weather/Weather';\nimport WeatherContextProvider from \"../contexts/WeatherContext\";\n\nimport ShowProfile from '../components/profile/ShowProfile';\nimport TimeLine from '../components/profile/Timeline';\nimport ProfileContextProvider from \"../contexts/ProfileContext\"\n\n\nconst HomePage = () => {\n  return (\n    <>\n      <WeatherContextProvider>\n        <Weather />\n      </WeatherContextProvider>\n      <ProfileContextProvider>\n        <TimeLine />\n        <ShowProfile /> \n      </ProfileContextProvider>\n    </>\n  );\n};\n\nexport default HomePage;","import React, { useState } from \"react\";\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport InputText from '../common/form/InputText';\nimport { useAuthContext } from \"../../contexts/AuthContext\";\nimport RenderLoading from '../common/utils/RenderLoading';\nimport Social from './Social';\n\nexport default function Login() {\n  const { authApi } = useAuthContext();\n  const [login, setLogin] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    setLogin({ ...login, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = e => {\n    authApi.loading(); \n    e.preventDefault(); \n    authApi.firebaseLogin(login);\n  }\n\n  const handleGoogle = () => {\n    authApi.socialSignIn('google');\n  };\n\n  const handleFb = () => {\n    authApi.socialSignIn('fb');\n  };\n\n  return (\n    <>\n    { authApi.state.loading && (<RenderLoading />)}\n    { !authApi.state.loading && \n      <Container className=\"justify-content-center col-6 bg-light rounded\">\n        { authApi.state.error && <Alert variant='danger'>{authApi.state.error}</Alert>}\n        <Form onSubmit={handleLogin} method=\"post\" className=\"auth-padding\">\n        {/* <Social handleGoogle={handleGoogle} handleFb={handleFb} title=\"Login with\"/> */}\n          <InputText placeholder=\"Please input email\" type=\"text\" label=\"Email\" name=\"email\" value={login.email} onChange={handleChange}/>\n          <InputText placeholder=\"Please input password\" type=\"password\" label=\"Password\" name=\"password\" value={login.password} onChange={handleChange}/>\n          <Button variant=\"primary\" type=\"submit\" size=\"sm\">Login</Button>\n        </Form>\n      </Container> }\n    </>\n  );\n}","import React, { useState } from \"react\";\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport InputText from '../common/form/InputText';\nimport { useAuthContext } from \"../../contexts/AuthContext\";\nimport RenderLoading from '../common/utils/RenderLoading';\nimport Social from './Social';\n\nexport default function Register() {\n  const { authApi } = useAuthContext();\n  const [register, setRegister] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    setRegister({ ...register, [e.target.name]: e.target.value });\n  };\n\n  const handleRegister = e => {\n    authApi.loading(); \n    e.preventDefault(); \n    authApi.firebaseRegister(register);                   \n  }\n\n  const handleGoogle = () => {\n    authApi.socialSignIn('google');\n  };\n\n  const handleFb = () => {\n    authApi.socialSignIn('fb');\n  };\n\n  return (\n    <>\n    { authApi.state.loading && (<RenderLoading />)}\n    { !authApi.state.loading && \n      <Container className=\"justify-content-center col-6 bg-light rounded\">\n        { authApi.state.error && <Alert variant='danger'>{authApi.state.error}</Alert>}\n        <Form onSubmit={handleRegister} method=\"post\" className=\"auth-padding\">\n          {/* <Social handleGoogle={handleGoogle} handleFb={handleFb} title=\"Register with\"/> */}\n          <InputText placeholder=\"Please input username\" type=\"text\" label=\"Username\" name=\"username\" value={register.username} onChange={handleChange}/>\n          <InputText placeholder=\"Please input email\" type=\"email\" label=\"Email\" name=\"email\" value={register.email} onChange={handleChange}/>\n          <InputText placeholder=\"Please input password\" type=\"password\" label=\"Password\" name=\"password\" value={register.password} onChange={handleChange}/>\n          <Button variant=\"primary\" type=\"submit\" size=\"sm\">Register</Button>\n        </Form>\n      </Container> }\n    </>\n  );\n}","import React, { Suspense, lazy } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport HomePage from \"../views/HomePage\";\nimport Login from \"./auth/Login\";\nimport Register from \"./auth/Register\";\nimport RenderLoading from \"./common/utils/RenderLoading\";\n\n//lazy-loading each and every component might be an anti-pattern and it is up to the developers to wisely choose\n//withholding unnecessary code during initial download and lazy-loading them on demand, all without sacrificing user experience.\nconst NotFound = lazy(() => import(\"../views/NotFound\"));\nconst CoinPage = lazy(() => import(\"../views/CoinPage\"));\nconst DogPage = lazy(() => import(\"../views/DogPage\"));\nconst MoviePage = lazy(() => import(\"../views/MoviePage\"));\nconst TaskPage = lazy(() => import(\"../views/TaskPage\"));\n\nconst Routes = () => {\n  const { authApi } = useAuthContext();\n\n  const AuthRoute = ({ component, ...options }) => {\n    if (component === Login && authApi.state.isLoggedIn) {\n      return <Redirect to='/react-bootstrap-app' />;\n    } else if (component === Register && authApi.state.isLoggedIn) {\n      return <Redirect to='/react-bootstrap-app' />;\n    } else if (component === Register && !authApi.state.isLoggedIn) {\n      return <Route {...options} component={Register} />;\n    } else {\n      const finalComponent = authApi.state.isLoggedIn ? component : Login;\n\n      return <Route {...options} component={finalComponent} />;\n    }\n  };\n\n  return (\n    <Suspense fallback={<RenderLoading />}>\n      <Switch>\n        <Route exact path='/react-bootstrap-app' component={HomePage} />\n        <Route path='/react-bootstrap-app' component={HomePage} />\n        <AuthRoute path='/login' component={Login} />\n        <AuthRoute path='/register' component={Register} />\n        <Route path='/coins' component={CoinPage} />\n        <Route path='/dogs' component={DogPage} />\n        <Route path='/movies' component={MoviePage} />\n        <AuthRoute path='/tasks' component={TaskPage} />\n        <Route component={NotFound} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Routes from '../../Routes';\n\nconst Layout = () => (\n  <>\n    <Header />\n    <Container fluid>\n      <Routes />\n    </Container>\n    <Footer />\n  </>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Layout from \"./components/common/layout/Layout\";\nimport AuthContextProvider from \"./contexts/AuthContext\";\n\nconst App = () => (\n  <BrowserRouter>\n    <AuthContextProvider>\n      <Layout />\n    </AuthContextProvider>\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}