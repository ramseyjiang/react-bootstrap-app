{"version":3,"sources":["components/common/utils/Request.js","components/common/form/InputText.jsx","components/common/utils/Storage.js","services/AuthReducer.js","contexts/AuthContext.js","components/common/layout/Navbar.jsx","components/common/layout/Header.jsx","components/common/layout/Footer.jsx","components/common/utils/Date.js","services/WeatherReducer.js","contexts/WeatherContext.js","components/weather/Weather.jsx","views/HomePage.jsx","components/auth/Login.jsx","components/Routes.js","components/common/layout/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["get","url","a","fetch","response","json","console","log","InputText","name","type","placeholder","onChange","label","onBlur","error","value","multiple","Group","as","Col","Label","Control","required","setLocal","key","localStorage","setItem","initAuth","isLoggedIn","loading","username","role","isAdmin","isManager","isStaff","isClient","authReducer","state","action","initAccess","loginSuccess","loginFailure","logout","getItem","removeItem","AuthContext","createContext","useAuthContext","useContext","AuthContextProvider","children","useReducer","dispatch","useEffect","login","useCallback","delay","ms","Promise","resolve","setTimeout","apiLogin","authApi","useMemo","Provider","Navigation","useState","expanded","setExpanded","layoutColor","Navbar","fixed","expand","bg","variant","Brand","href","Toggle","onClick","aria-controls","Collapse","id","Nav","className","exact","to","Header","Footer","Date","getFullYear","initState","data","errorMessage","weatherReducer","Error","WeatherContext","WeatherContextProvider","getWeather","then","res","location","city","country","result","weatherApi","Weather","Alert","weather","main","Math","round","temp","description","HomePage","Login","password","setLogin","handleChange","e","target","Container","Form","onSubmit","preventDefault","method","Row","Button","size","NotFound","lazy","MoviePage","TaskPage","Contact","Routes","AuthRoute","component","options","finalComponent","fallback","path","Layout","fluid","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.54c8a81a.chunk.js","sourcesContent":["export const get = async url => {\n  try {\n    //ES2017 rules\n    const response = await fetch(url);\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/*\n  data should be JSON format, such as\n    data = {\n      name: name,\n      email: email\n    }\n**/\nexport const post = async (url, data) => {\n  //ES6\n  fetch(url, {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  })\n    .then(response => response.json())\n    .then(result => console.log(\"result\", result))\n    .catch(err => console.log(err));\n};\n\n/*\n  data should be JSON format, such as\n    data = {\n      name: name,\n      email: email\n    }\n**/\nexport const put = async (url, data) => {\n  try {\n    //ES2017\n    const response = await fetch(url, {\n      method: \"put\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//cannot name delete because keywords crash\nexport const del = async url => {\n  try {\n    //ES2017\n    const response = await fetch(url, {\n      method: \"delete\"\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from \"react\";\nimport { Form, Col } from 'react-bootstrap';\n\nconst InputText = ({\n  name,\n  type,\n  placeholder,\n  onChange,\n  onBlur,\n  error,\n  label,\n  multiple = false,\n  value\n}) => {\n  return (\n    <>\n        <Form.Group as={Col}>\n            <Form.Label>{label}</Form.Label>\n            <Form.Control type={type} placeholder={placeholder} name={name} value={value} onChange={onChange} required/>\n        </Form.Group>\n      {/* {error && <div style={Style.error}>{error}</div>} */}\n    </>\n  );\n};\n\nexport default InputText;\n","export function getLocal(key) {\n  return localStorage.getItem(key);\n}\n\nexport function setLocal(key, value) {\n  return localStorage.setItem(key, value);\n}\n\nexport function removeLocal(key) {\n  localStorage.removeItem(key);\n}\n","import {\n  getLocal,\n  removeLocal,\n  setLocal\n} from \"../components/common/utils/Storage.js\";\n\nexport const initAuth = {\n  isLoggedIn: false,\n  loading: false,\n  username: null,\n  role: { isAdmin: false, isManager: false, isStaff: false, isClient: true }, //it is used to extension the roles management.\n  error: null\n};\n\n// Actions\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOADING = \"LOADING\";\nexport const INIT = \"INIT\";\n\nexport function authReducer(state, action) {\n  switch (action.type) {\n    case INIT:\n      return initAccess();\n    case LOADING:\n      return { ...state, loading: true };\n    case LOGIN_SUCCESS:\n      return loginSuccess(action);\n    case LOGIN_FAIL:\n      return loginFailure(action);\n    case LOGOUT:\n      return logout();\n    default:\n      return state;\n  }\n}\n\nconst initAccess = () => {\n  let username = getLocal(\"username\");\n  return { ...initAuth, isLoggedIn: username !== null, username: username };\n};\n\nconst loginSuccess = action => {\n  setLocal(\"username\", action.username);\n  return { ...initAuth, isLoggedIn: true, username: action.username };\n};\n\nconst loginFailure = action => {\n  setLocal(\"username\", null);\n  return { ...initAuth, error: action.error };\n};\n\nconst logout = () => {\n  removeLocal(\"username\");\n  return { ...initAuth };\n};\n","import React, {\n  createContext,\n  useCallback,\n  useMemo,\n  useContext,\n  useEffect,\n  useReducer\n} from \"react\";\n\nimport {\n  initAuth,\n  authReducer,\n  INIT,\n  LOADING,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from \"../services/AuthReducer\";\n\nconst AuthContext = createContext();\n\nconst AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initAuth);\n\n  //The first time a user visits the website, it will only run once.\n  //The other scenario, a user closed website without logout, after the user come back, it will auto login.\n  useEffect(() => {\n    if (state.username === null) {\n      dispatch({ type: INIT });\n    }\n  }, [state.username]);\n\n  const loading = () => dispatch({ type: LOADING });\n\n  const login = useCallback(username => {\n    if (username === \"ramsey\") {\n      return dispatch({ type: LOGIN_SUCCESS, username: username });\n    } else {\n      return dispatch({ type: LOGIN_FAIL, error: \"User not found!\" });\n    }\n  }, []);\n\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  // A fake authenticator to mock async api call\n  const apiLogin = useCallback(async username => {\n    await delay(2000);\n    if (username === \"ramsey\") {\n      return dispatch({ type: LOGIN_SUCCESS, username: username });\n    } else {\n      return dispatch({ type: LOGIN_FAIL, error: \"User not found!\" });\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    dispatch({ type: LOGOUT });\n  }, []);\n\n  const authApi = useMemo(() => ({ state, loading, logout, login, apiLogin }), [\n    logout,\n    login,\n    apiLogin,\n    state\n  ]);\n\n  return (\n    <AuthContext.Provider value={{ authApi }}>{children}</AuthContext.Provider>\n  );\n};\n\nexport const useAuthContext = () => {\n  return useContext(AuthContext);\n};\n\nexport default AuthContextProvider;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar,  Nav } from \"react-bootstrap\";\nimport { useAuthContext } from \"../../../contexts/AuthContext\";\n\nconst Navigation = () => {\n  const { authApi } = useAuthContext();\n\n  //collapseOnSelect is not stable, it works for href, but not works for router to. That's why I build it by myself.\n  const [expanded, setExpanded] = useState(false);\n  const layoutColor = authApi.state.isLoggedIn ? \"primary\" : \"dark\";  //It is a cue for change different layout\n  \n  return (\n    <Navbar expanded={expanded} fixed='top' expand=\"sm\" bg={layoutColor} variant=\"dark\">\n      <Navbar.Brand href=\"/react-bootstrap-app\">HooksHut</Navbar.Brand>\n      <Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")} aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className=\"mr-auto\">\n          <NavLink\n            exact\n            className='nav-link'\n            to='/react-bootstrap-app'\n            onClick={() => setExpanded(false)}>\n            Home\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/movies'\n            onClick={() => setExpanded(false)}>\n            Movies\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/tasks'\n            onClick={() => setExpanded(false)}>\n            Tasks\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to='/contact'\n            onClick={() => setExpanded(false)}>\n            Contact\n          </NavLink>\n        </Nav>\n        { !authApi.state.isLoggedIn && <Nav>\n          <NavLink exact to=\"/login\" className='nav-link'>Login</NavLink>\n          <NavLink exact to=\"/register\" className='nav-link'>Register</NavLink>\n        </Nav> }\n        { authApi.state.isLoggedIn && <Nav>\n          <NavLink to=\"/home\" onClick={() => authApi.logout()} className='nav-link'>Logout</NavLink>\n        </Nav> }\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nconst Header = () => {\n  return (\n    <>\n      <Navbar />\n    </>\n  );\n};\n\nexport default Header;","import React from \"react\";\nimport {year} from \"../utils/Date.js\"\n\nconst Footer = () => {\n    return (\n      <div className=\"font-small bg-dark\">\n        <div className=\"text-center text-white py-1\">© {year()} Copyright:Ramsey Jiang</div>\n      </div>\n    );\n};\n\nexport default Footer;","export function year() {\n  return new Date().getFullYear();\n}\n\nexport function month() {\n  let month = new Date().getMonth() + 1;\n  if (month >= 10) {\n    return month;\n  } else {\n    return \"0\" + month;\n  }\n}\n\nexport function day() {\n  return new Date().getDate();\n}\n","// Actions\nexport const LOADING = \"LOADING\";\nexport const GET_LOCATION_SUCCESS = \"GET_LOCATION_SUCCESS\";\nexport const GET_LOCATION_FAILURE = \"GET_LOCATION_FAILURE\";\nexport const GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\";\nexport const GET_WEATHER_FAILURE = \"GET_WEATHER_FAILURE\";\n\nexport const initState = {\n  data: null,\n  loading: false,\n  errorMessage: null\n};\n\nexport const weatherReducer = (state, action) => {\n  switch (action.type) {\n    case LOADING: {\n      return { ...state, loading: true };\n    }\n    case GET_WEATHER_SUCCESS: {\n      return {\n        ...initState,\n        data: action.data\n      };\n    }\n    case GET_WEATHER_FAILURE: {\n      return {\n        ...initState,\n        errorMessage: \"Something wrong!\"\n      };\n    }\n    default:\n      throw new Error();\n  }\n};\n","import React, {\n  createContext,\n  useMemo,\n  useContext,\n  useCallback,\n  useReducer\n} from \"react\";\nimport {\n  initState,\n  weatherReducer,\n  GET_WEATHER_SUCCESS,\n  GET_WEATHER_FAILURE\n} from \"../services/WeatherReducer\";\nimport { get } from \"../components/common/utils/Request\";\n\nconst WeatherContext = createContext();\n\nconst WeatherContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(weatherReducer, initState);\n\n  const IP_API_URL = \"https://ipapi.co/json/\";\n  const WEATHER_API_URL =\n    \"https://api.openweathermap.org/data/2.5/weather?APPID=3a58f9dd1f1515ec0dba25894ccea202&q=\";\n\n  const getWeather = useCallback(() => {\n    get(IP_API_URL).then(res => {\n      let location = res.city + \",\" + res.country;\n      get(WEATHER_API_URL + location).then(result => {\n        try {\n          dispatch({ type: GET_WEATHER_SUCCESS, data: result });\n        } catch {\n          dispatch({ type: GET_WEATHER_FAILURE, data: result });\n        }\n      });\n    });\n  }, [IP_API_URL]);\n\n  const weatherApi = useMemo(() => ({ state, getWeather }), [\n    state,\n    getWeather\n  ]);\n\n  return (\n    <WeatherContext.Provider value={{ weatherApi }}>\n      {children}\n    </WeatherContext.Provider>\n  );\n};\n\nexport const useWeatherContext = () => {\n  return useContext(WeatherContext);\n};\n\nexport default WeatherContextProvider;\n","import React, {useEffect} from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { useWeatherContext } from \"../../contexts/WeatherContext\";\n\nconst Weather = () => {\n  const { weatherApi } = useWeatherContext();\n  useEffect(() => {\n    weatherApi.getWeather(); \n  }, []);\n\n  return (\n    <>\n      {weatherApi.state.data && <Alert className=\"justify-content-center weather-bar\" variant='info'>\n        Welcome, current weather is {weatherApi.state.data.weather[0].main}, temperature is {Math.round(((weatherApi.state.data.main.temp * 9/5 - 459.67) - 32)*5/9)}°C, conditions: {weatherApi.state.data.weather[0].description}\n      </Alert>}\n    </>\n  );\n}\n\nexport default Weather;","import React from \"react\";\nimport Weather from '../components/weather/Weather';\nimport WeatherContextProvider from \"../contexts/WeatherContext\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <WeatherContextProvider>\n        <Weather />\n      </WeatherContextProvider>\n    </>\n  );\n};\n\nexport default HomePage;","import React, { useState } from \"react\";\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport InputText from '../common/form/InputText';\nimport { useAuthContext } from \"../../contexts/AuthContext\";\n\nexport default function Login() {\n  const { authApi } = useAuthContext();\n  const [login, setLogin] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    setLogin({ ...login, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = e => {\n    authApi.loading(); \n    e.preventDefault(); \n    authApi.login(login.username);                       \n  }\n\n  return (\n    <>\n    { authApi.state.loading && <p>Loading</p>}\n    { !authApi.state.loading && \n      <Container className=\"justify-content-center col-6 bg-light\">\n        { authApi.state.error && <Alert variant='danger'>{authApi.state.error}</Alert>}\n        <Form onSubmit={handleLogin} method=\"post\">\n          <Form.Row>\n            <InputText placeholder=\"Please input username\" type=\"text\" label=\"Username\" name=\"username\" value={login.username} onChange={handleChange}/>\n          </Form.Row>\n          <Form.Row>\n            <InputText placeholder=\"Please input password\" type=\"password\" label=\"Password\" name=\"password\" value={login.password} onChange={handleChange}/>\n          </Form.Row>\n            <Button variant=\"primary\" type=\"submit\" size=\"sm\">Login</Button>\n        </Form>\n      </Container> }\n    </>\n  );\n}","import React, { Suspense, lazy } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport HomePage from \"../views/HomePage\";\nimport Login from \"./auth/Login\";\n\n//lazy-loading each and every component might be an anti-pattern and it is up to the developers to wisely choose\n//withholding unnecessary code during initial download and lazy-loading them on demand, all without sacrificing user experience.\nconst NotFound = lazy(() => import(\"../views/NotFound\"));\nconst MoviePage = lazy(() => import(\"../views/MoviePage\"));\nconst TaskPage = lazy(() => import(\"../views/TaskPage\"));\nconst Contact = lazy(() => import(\"../views/Contact\"));\n\nconst Routes = () => {\n  const { authApi } = useAuthContext();\n\n  const AuthRoute = ({ component, ...options }) => {\n    if (component === Login && authApi.state.isLoggedIn) {\n      return <Redirect to='/home' />;\n    } else {\n      const finalComponent = authApi.state.isLoggedIn ? component : Login;\n\n      return <Route {...options} component={finalComponent} />;\n    }\n  };\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route exact path='/react-bootstrap-app' component={HomePage} />\n        <Route path='/react-bootstrap-app' component={HomePage} />\n        <AuthRoute path='/login' component={Login} />\n        <Route path='/movies' component={MoviePage} />\n        <AuthRoute path='/tasks' component={TaskPage} />\n        <Route path='/contact' component={Contact} />\n        <Route component={NotFound} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Routes from '../../Routes';\n\nconst Layout = () => (\n  <>\n    <Header />\n    <Container fluid>\n      <Routes />\n    </Container>\n    <Footer />\n  </>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Layout from \"./components/common/layout/Layout\";\nimport AuthContextProvider from \"./contexts/AuthContext\";\n\nconst App = () => (\n  <BrowserRouter>\n    <AuthContextProvider>\n      <Layout />\n    </AuthContextProvider>\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}